import {
  require_jquery
} from "./chunk-REYSB7VA.js";
import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/jquery-datetimepicker/build/jquery.datetimepicker.full.min.js
var require_jquery_datetimepicker_full_min = __commonJS({
  "node_modules/jquery-datetimepicker/build/jquery.datetimepicker.full.min.js"(exports, module) {
    var DateFormatter;
    !function() {
      "use strict";
      var D, s, r, a, n;
      D = function(e, t) {
        return "string" == typeof e && "string" == typeof t && e.toLowerCase() === t.toLowerCase();
      }, s = function(e, t, a2) {
        var n2 = a2 || "0", r2 = e.toString();
        return r2.length < t ? s(n2 + r2, t) : r2;
      }, r = function(e) {
        var t, a2;
        for (e = e || {}, t = 1; t < arguments.length; t++)
          if (a2 = arguments[t])
            for (var n2 in a2)
              a2.hasOwnProperty(n2) && ("object" == typeof a2[n2] ? r(e[n2], a2[n2]) : e[n2] = a2[n2]);
        return e;
      }, a = function(e, t) {
        for (var a2 = 0; a2 < t.length; a2++)
          if (t[a2].toLowerCase() === e.toLowerCase())
            return a2;
        return -1;
      }, n = { dateSettings: { days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], meridiem: ["AM", "PM"], ordinal: function(e) {
        var t = e % 10, a2 = { 1: "st", 2: "nd", 3: "rd" };
        return 1 !== Math.floor(e % 100 / 10) && a2[t] ? a2[t] : "th";
      } }, separators: /[ \-+\/\.T:@]/g, validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g, intParts: /[djwNzmnyYhHgGis]/g, tzParts: /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g, tzClip: /[^-+\dA-Z]/g }, (DateFormatter = function(e) {
        var t = this, a2 = r(n, e);
        t.dateSettings = a2.dateSettings, t.separators = a2.separators, t.validParts = a2.validParts, t.intParts = a2.intParts, t.tzParts = a2.tzParts, t.tzClip = a2.tzClip;
      }).prototype = { constructor: DateFormatter, getMonth: function(e) {
        var t;
        return 0 === (t = a(e, this.dateSettings.monthsShort) + 1) && (t = a(e, this.dateSettings.months) + 1), t;
      }, parseDate: function(e, t) {
        var a2, n2, r2, o, i, s2, d, u, l, f, c = this, m = false, h = false, g = c.dateSettings, p = { date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0 };
        if (!e)
          return null;
        if (e instanceof Date)
          return e;
        if ("U" === t)
          return (r2 = parseInt(e)) ? new Date(1e3 * r2) : e;
        switch (typeof e) {
          case "number":
            return new Date(e);
          case "string":
            break;
          default:
            return null;
        }
        if (!(a2 = t.match(c.validParts)) || 0 === a2.length)
          throw new Error("Invalid date format definition.");
        for (n2 = e.replace(c.separators, "\0").split("\0"), r2 = 0; r2 < n2.length; r2++)
          switch (o = n2[r2], i = parseInt(o), a2[r2]) {
            case "y":
            case "Y":
              if (!i)
                return null;
              l = o.length, p.year = 2 === l ? parseInt((i < 70 ? "20" : "19") + o) : i, m = true;
              break;
            case "m":
            case "n":
            case "M":
            case "F":
              if (isNaN(i)) {
                if (!(0 < (s2 = c.getMonth(o))))
                  return null;
                p.month = s2;
              } else {
                if (!(1 <= i && i <= 12))
                  return null;
                p.month = i;
              }
              m = true;
              break;
            case "d":
            case "j":
              if (!(1 <= i && i <= 31))
                return null;
              p.day = i, m = true;
              break;
            case "g":
            case "h":
              if (f = n2[d = -1 < a2.indexOf("a") ? a2.indexOf("a") : -1 < a2.indexOf("A") ? a2.indexOf("A") : -1], -1 < d)
                u = D(f, g.meridiem[0]) ? 0 : D(f, g.meridiem[1]) ? 12 : -1, 1 <= i && i <= 12 && -1 < u ? p.hour = i + u - 1 : 0 <= i && i <= 23 && (p.hour = i);
              else {
                if (!(0 <= i && i <= 23))
                  return null;
                p.hour = i;
              }
              h = true;
              break;
            case "G":
            case "H":
              if (!(0 <= i && i <= 23))
                return null;
              p.hour = i, h = true;
              break;
            case "i":
              if (!(0 <= i && i <= 59))
                return null;
              p.min = i, h = true;
              break;
            case "s":
              if (!(0 <= i && i <= 59))
                return null;
              p.sec = i, h = true;
          }
        if (true === m && p.year && p.month && p.day)
          p.date = new Date(p.year, p.month - 1, p.day, p.hour, p.min, p.sec, 0);
        else {
          if (true !== h)
            return null;
          p.date = new Date(0, 0, 0, p.hour, p.min, p.sec, 0);
        }
        return p.date;
      }, guessDate: function(e, t) {
        if ("string" != typeof e)
          return e;
        var a2, n2, r2, o, i, s2, d = e.replace(this.separators, "\0").split("\0"), u = t.match(this.validParts), l = new Date(), f = 0;
        if (!/^[djmn]/g.test(u[0]))
          return e;
        for (r2 = 0; r2 < d.length; r2++) {
          if (f = 2, i = d[r2], s2 = parseInt(i.substr(0, 2)), isNaN(s2))
            return null;
          switch (r2) {
            case 0:
              "m" === u[0] || "n" === u[0] ? l.setMonth(s2 - 1) : l.setDate(s2);
              break;
            case 1:
              "m" === u[0] || "n" === u[0] ? l.setDate(s2) : l.setMonth(s2 - 1);
              break;
            case 2:
              if (n2 = l.getFullYear(), f = (a2 = i.length) < 4 ? a2 : 4, !(n2 = parseInt(a2 < 4 ? n2.toString().substr(0, 4 - a2) + i : i.substr(0, 4))))
                return null;
              l.setFullYear(n2);
              break;
            case 3:
              l.setHours(s2);
              break;
            case 4:
              l.setMinutes(s2);
              break;
            case 5:
              l.setSeconds(s2);
          }
          0 < (o = i.substr(f)).length && d.splice(r2 + 1, 0, o);
        }
        return l;
      }, parseFormat: function(e, n2) {
        var a2, t = this, r2 = t.dateSettings, o = /\\?(.?)/gi, i = function(e2, t2) {
          return a2[e2] ? a2[e2]() : t2;
        };
        return a2 = { d: function() {
          return s(a2.j(), 2);
        }, D: function() {
          return r2.daysShort[a2.w()];
        }, j: function() {
          return n2.getDate();
        }, l: function() {
          return r2.days[a2.w()];
        }, N: function() {
          return a2.w() || 7;
        }, w: function() {
          return n2.getDay();
        }, z: function() {
          var e2 = new Date(a2.Y(), a2.n() - 1, a2.j()), t2 = new Date(a2.Y(), 0, 1);
          return Math.round((e2 - t2) / 864e5);
        }, W: function() {
          var e2 = new Date(a2.Y(), a2.n() - 1, a2.j() - a2.N() + 3), t2 = new Date(e2.getFullYear(), 0, 4);
          return s(1 + Math.round((e2 - t2) / 864e5 / 7), 2);
        }, F: function() {
          return r2.months[n2.getMonth()];
        }, m: function() {
          return s(a2.n(), 2);
        }, M: function() {
          return r2.monthsShort[n2.getMonth()];
        }, n: function() {
          return n2.getMonth() + 1;
        }, t: function() {
          return new Date(a2.Y(), a2.n(), 0).getDate();
        }, L: function() {
          var e2 = a2.Y();
          return e2 % 4 == 0 && e2 % 100 != 0 || e2 % 400 == 0 ? 1 : 0;
        }, o: function() {
          var e2 = a2.n(), t2 = a2.W();
          return a2.Y() + (12 === e2 && t2 < 9 ? 1 : 1 === e2 && 9 < t2 ? -1 : 0);
        }, Y: function() {
          return n2.getFullYear();
        }, y: function() {
          return a2.Y().toString().slice(-2);
        }, a: function() {
          return a2.A().toLowerCase();
        }, A: function() {
          var e2 = a2.G() < 12 ? 0 : 1;
          return r2.meridiem[e2];
        }, B: function() {
          var e2 = 3600 * n2.getUTCHours(), t2 = 60 * n2.getUTCMinutes(), a3 = n2.getUTCSeconds();
          return s(Math.floor((e2 + t2 + a3 + 3600) / 86.4) % 1e3, 3);
        }, g: function() {
          return a2.G() % 12 || 12;
        }, G: function() {
          return n2.getHours();
        }, h: function() {
          return s(a2.g(), 2);
        }, H: function() {
          return s(a2.G(), 2);
        }, i: function() {
          return s(n2.getMinutes(), 2);
        }, s: function() {
          return s(n2.getSeconds(), 2);
        }, u: function() {
          return s(1e3 * n2.getMilliseconds(), 6);
        }, e: function() {
          return /\((.*)\)/.exec(String(n2))[1] || "Coordinated Universal Time";
        }, I: function() {
          return new Date(a2.Y(), 0) - Date.UTC(a2.Y(), 0) != new Date(a2.Y(), 6) - Date.UTC(a2.Y(), 6) ? 1 : 0;
        }, O: function() {
          var e2 = n2.getTimezoneOffset(), t2 = Math.abs(e2);
          return (0 < e2 ? "-" : "+") + s(100 * Math.floor(t2 / 60) + t2 % 60, 4);
        }, P: function() {
          var e2 = a2.O();
          return e2.substr(0, 3) + ":" + e2.substr(3, 2);
        }, T: function() {
          return (String(n2).match(t.tzParts) || [""]).pop().replace(t.tzClip, "") || "UTC";
        }, Z: function() {
          return 60 * -n2.getTimezoneOffset();
        }, c: function() {
          return "Y-m-d\\TH:i:sP".replace(o, i);
        }, r: function() {
          return "D, d M Y H:i:s O".replace(o, i);
        }, U: function() {
          return n2.getTime() / 1e3 || 0;
        } }, i(e, e);
      }, formatDate: function(e, t) {
        var a2, n2, r2, o, i, s2 = "";
        if ("string" == typeof e && !(e = this.parseDate(e, t)))
          return null;
        if (e instanceof Date) {
          for (r2 = t.length, a2 = 0; a2 < r2; a2++)
            "S" !== (i = t.charAt(a2)) && "\\" !== i && (0 < a2 && "\\" === t.charAt(a2 - 1) ? s2 += i : (o = this.parseFormat(i, e), a2 !== r2 - 1 && this.intParts.test(i) && "S" === t.charAt(a2 + 1) && (n2 = parseInt(o) || 0, o += this.dateSettings.ordinal(n2)), s2 += o));
          return s2;
        }
        return "";
      } };
    }();
    var datetimepickerFactory = function(L) {
      "use strict";
      var s = { i18n: { ar: { months: ["\u0643\u0627\u0646\u0648\u0646 \u0627\u0644\u062B\u0627\u0646\u064A", "\u0634\u0628\u0627\u0637", "\u0622\u0630\u0627\u0631", "\u0646\u064A\u0633\u0627\u0646", "\u0645\u0627\u064A\u0648", "\u062D\u0632\u064A\u0631\u0627\u0646", "\u062A\u0645\u0648\u0632", "\u0622\u0628", "\u0623\u064A\u0644\u0648\u0644", "\u062A\u0634\u0631\u064A\u0646 \u0627\u0644\u0623\u0648\u0644", "\u062A\u0634\u0631\u064A\u0646 \u0627\u0644\u062B\u0627\u0646\u064A", "\u0643\u0627\u0646\u0648\u0646 \u0627\u0644\u0623\u0648\u0644"], dayOfWeekShort: ["\u0646", "\u062B", "\u0639", "\u062E", "\u062C", "\u0633", "\u062D"], dayOfWeek: ["\u0627\u0644\u0623\u062D\u062F", "\u0627\u0644\u0627\u062B\u0646\u064A\u0646", "\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062E\u0645\u064A\u0633", "\u0627\u0644\u062C\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062A", "\u0627\u0644\u0623\u062D\u062F"] }, ro: { months: ["Ianuarie", "Februarie", "Martie", "Aprilie", "Mai", "Iunie", "Iulie", "August", "Septembrie", "Octombrie", "Noiembrie", "Decembrie"], dayOfWeekShort: ["Du", "Lu", "Ma", "Mi", "Jo", "Vi", "S\xE2"], dayOfWeek: ["Duminic\u0103", "Luni", "Mar\u0163i", "Miercuri", "Joi", "Vineri", "S\xE2mb\u0103t\u0103"] }, id: { months: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], dayOfWeekShort: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], dayOfWeek: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"] }, is: { months: ["Jan\xFAar", "Febr\xFAar", "Mars", "Apr\xEDl", "Ma\xED", "J\xFAn\xED", "J\xFAl\xED", "\xC1g\xFAst", "September", "Okt\xF3ber", "N\xF3vember", "Desember"], dayOfWeekShort: ["Sun", "M\xE1n", "\xDEri\xF0", "Mi\xF0", "Fim", "F\xF6s", "Lau"], dayOfWeek: ["Sunnudagur", "M\xE1nudagur", "\xDEri\xF0judagur", "Mi\xF0vikudagur", "Fimmtudagur", "F\xF6studagur", "Laugardagur"] }, bg: { months: ["\u042F\u043D\u0443\u0430\u0440\u0438", "\u0424\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u041C\u0430\u0440\u0442", "\u0410\u043F\u0440\u0438\u043B", "\u041C\u0430\u0439", "\u042E\u043D\u0438", "\u042E\u043B\u0438", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438", "\u041E\u043A\u0442\u043E\u043C\u0432\u0440\u0438", "\u041D\u043E\u0435\u043C\u0432\u0440\u0438", "\u0414\u0435\u043A\u0435\u043C\u0432\u0440\u0438"], dayOfWeekShort: ["\u041D\u0434", "\u041F\u043D", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041F\u0442", "\u0421\u0431"], dayOfWeek: ["\u041D\u0435\u0434\u0435\u043B\u044F", "\u041F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A", "\u0412\u0442\u043E\u0440\u043D\u0438\u043A", "\u0421\u0440\u044F\u0434\u0430", "\u0427\u0435\u0442\u0432\u044A\u0440\u0442\u044A\u043A", "\u041F\u0435\u0442\u044A\u043A", "\u0421\u044A\u0431\u043E\u0442\u0430"] }, fa: { months: ["\u0641\u0631\u0648\u0631\u062F\u06CC\u0646", "\u0627\u0631\u062F\u06CC\u0628\u0647\u0634\u062A", "\u062E\u0631\u062F\u0627\u062F", "\u062A\u06CC\u0631", "\u0645\u0631\u062F\u0627\u062F", "\u0634\u0647\u0631\u06CC\u0648\u0631", "\u0645\u0647\u0631", "\u0622\u0628\u0627\u0646", "\u0622\u0630\u0631", "\u062F\u06CC", "\u0628\u0647\u0645\u0646", "\u0627\u0633\u0641\u0646\u062F"], dayOfWeekShort: ["\u06CC\u06A9\u0634\u0646\u0628\u0647", "\u062F\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647 \u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067E\u0646\u062C\u0634\u0646\u0628\u0647", "\u062C\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], dayOfWeek: ["\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647", "\u062F\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200C\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647", "\u062C\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647", "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647"] }, ru: { months: ["\u042F\u043D\u0432\u0430\u0440\u044C", "\u0424\u0435\u0432\u0440\u0430\u043B\u044C", "\u041C\u0430\u0440\u0442", "\u0410\u043F\u0440\u0435\u043B\u044C", "\u041C\u0430\u0439", "\u0418\u044E\u043D\u044C", "\u0418\u044E\u043B\u044C", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043D\u0442\u044F\u0431\u0440\u044C", "\u041E\u043A\u0442\u044F\u0431\u0440\u044C", "\u041D\u043E\u044F\u0431\u0440\u044C", "\u0414\u0435\u043A\u0430\u0431\u0440\u044C"], dayOfWeekShort: ["\u0412\u0441", "\u041F\u043D", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041F\u0442", "\u0421\u0431"], dayOfWeek: ["\u0412\u043E\u0441\u043A\u0440\u0435\u0441\u0435\u043D\u044C\u0435", "\u041F\u043E\u043D\u0435\u0434\u0435\u043B\u044C\u043D\u0438\u043A", "\u0412\u0442\u043E\u0440\u043D\u0438\u043A", "\u0421\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440\u0433", "\u041F\u044F\u0442\u043D\u0438\u0446\u0430", "\u0421\u0443\u0431\u0431\u043E\u0442\u0430"] }, uk: { months: ["\u0421\u0456\u0447\u0435\u043D\u044C", "\u041B\u044E\u0442\u0438\u0439", "\u0411\u0435\u0440\u0435\u0437\u0435\u043D\u044C", "\u041A\u0432\u0456\u0442\u0435\u043D\u044C", "\u0422\u0440\u0430\u0432\u0435\u043D\u044C", "\u0427\u0435\u0440\u0432\u0435\u043D\u044C", "\u041B\u0438\u043F\u0435\u043D\u044C", "\u0421\u0435\u0440\u043F\u0435\u043D\u044C", "\u0412\u0435\u0440\u0435\u0441\u0435\u043D\u044C", "\u0416\u043E\u0432\u0442\u0435\u043D\u044C", "\u041B\u0438\u0441\u0442\u043E\u043F\u0430\u0434", "\u0413\u0440\u0443\u0434\u0435\u043D\u044C"], dayOfWeekShort: ["\u041D\u0434\u043B", "\u041F\u043D\u0434", "\u0412\u0442\u0440", "\u0421\u0440\u0434", "\u0427\u0442\u0432", "\u041F\u0442\u043D", "\u0421\u0431\u0442"], dayOfWeek: ["\u041D\u0435\u0434\u0456\u043B\u044F", "\u041F\u043E\u043D\u0435\u0434\u0456\u043B\u043E\u043A", "\u0412\u0456\u0432\u0442\u043E\u0440\u043E\u043A", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041F'\u044F\u0442\u043D\u0438\u0446\u044F", "\u0421\u0443\u0431\u043E\u0442\u0430"] }, en: { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dayOfWeekShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] }, el: { months: ["\u0399\u03B1\u03BD\u03BF\u03C5\u03AC\u03C1\u03B9\u03BF\u03C2", "\u03A6\u03B5\u03B2\u03C1\u03BF\u03C5\u03AC\u03C1\u03B9\u03BF\u03C2", "\u039C\u03AC\u03C1\u03C4\u03B9\u03BF\u03C2", "\u0391\u03C0\u03C1\u03AF\u03BB\u03B9\u03BF\u03C2", "\u039C\u03AC\u03B9\u03BF\u03C2", "\u0399\u03BF\u03CD\u03BD\u03B9\u03BF\u03C2", "\u0399\u03BF\u03CD\u03BB\u03B9\u03BF\u03C2", "\u0391\u03CD\u03B3\u03BF\u03C5\u03C3\u03C4\u03BF\u03C2", "\u03A3\u03B5\u03C0\u03C4\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2", "\u039F\u03BA\u03C4\u03CE\u03B2\u03C1\u03B9\u03BF\u03C2", "\u039D\u03BF\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2", "\u0394\u03B5\u03BA\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2"], dayOfWeekShort: ["\u039A\u03C5\u03C1", "\u0394\u03B5\u03C5", "\u03A4\u03C1\u03B9", "\u03A4\u03B5\u03C4", "\u03A0\u03B5\u03BC", "\u03A0\u03B1\u03C1", "\u03A3\u03B1\u03B2"], dayOfWeek: ["\u039A\u03C5\u03C1\u03B9\u03B1\u03BA\u03AE", "\u0394\u03B5\u03C5\u03C4\u03AD\u03C1\u03B1", "\u03A4\u03C1\u03AF\u03C4\u03B7", "\u03A4\u03B5\u03C4\u03AC\u03C1\u03C4\u03B7", "\u03A0\u03AD\u03BC\u03C0\u03C4\u03B7", "\u03A0\u03B1\u03C1\u03B1\u03C3\u03BA\u03B5\u03C5\u03AE", "\u03A3\u03AC\u03B2\u03B2\u03B1\u03C4\u03BF"] }, de: { months: ["Januar", "Februar", "M\xE4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], dayOfWeekShort: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], dayOfWeek: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"] }, nl: { months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], dayOfWeekShort: ["zo", "ma", "di", "wo", "do", "vr", "za"], dayOfWeek: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"] }, tr: { months: ["Ocak", "\u015Eubat", "Mart", "Nisan", "May\u0131s", "Haziran", "Temmuz", "A\u011Fustos", "Eyl\xFCl", "Ekim", "Kas\u0131m", "Aral\u0131k"], dayOfWeekShort: ["Paz", "Pts", "Sal", "\xC7ar", "Per", "Cum", "Cts"], dayOfWeek: ["Pazar", "Pazartesi", "Sal\u0131", "\xC7ar\u015Famba", "Per\u015Fembe", "Cuma", "Cumartesi"] }, fr: { months: ["Janvier", "F\xE9vrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "Ao\xFBt", "Septembre", "Octobre", "Novembre", "D\xE9cembre"], dayOfWeekShort: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"], dayOfWeek: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"] }, es: { months: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"], dayOfWeekShort: ["Dom", "Lun", "Mar", "Mi\xE9", "Jue", "Vie", "S\xE1b"], dayOfWeek: ["Domingo", "Lunes", "Martes", "Mi\xE9rcoles", "Jueves", "Viernes", "S\xE1bado"] }, th: { months: ["\u0E21\u0E01\u0E23\u0E32\u0E04\u0E21", "\u0E01\u0E38\u0E21\u0E20\u0E32\u0E1E\u0E31\u0E19\u0E18\u0E4C", "\u0E21\u0E35\u0E19\u0E32\u0E04\u0E21", "\u0E40\u0E21\u0E29\u0E32\u0E22\u0E19", "\u0E1E\u0E24\u0E29\u0E20\u0E32\u0E04\u0E21", "\u0E21\u0E34\u0E16\u0E38\u0E19\u0E32\u0E22\u0E19", "\u0E01\u0E23\u0E01\u0E0E\u0E32\u0E04\u0E21", "\u0E2A\u0E34\u0E07\u0E2B\u0E32\u0E04\u0E21", "\u0E01\u0E31\u0E19\u0E22\u0E32\u0E22\u0E19", "\u0E15\u0E38\u0E25\u0E32\u0E04\u0E21", "\u0E1E\u0E24\u0E28\u0E08\u0E34\u0E01\u0E32\u0E22\u0E19", "\u0E18\u0E31\u0E19\u0E27\u0E32\u0E04\u0E21"], dayOfWeekShort: ["\u0E2D\u0E32.", "\u0E08.", "\u0E2D.", "\u0E1E.", "\u0E1E\u0E24.", "\u0E28.", "\u0E2A."], dayOfWeek: ["\u0E2D\u0E32\u0E17\u0E34\u0E15\u0E22\u0E4C", "\u0E08\u0E31\u0E19\u0E17\u0E23\u0E4C", "\u0E2D\u0E31\u0E07\u0E04\u0E32\u0E23", "\u0E1E\u0E38\u0E18", "\u0E1E\u0E24\u0E2B\u0E31\u0E2A", "\u0E28\u0E38\u0E01\u0E23\u0E4C", "\u0E40\u0E2A\u0E32\u0E23\u0E4C", "\u0E2D\u0E32\u0E17\u0E34\u0E15\u0E22\u0E4C"] }, pl: { months: ["stycze\u0144", "luty", "marzec", "kwiecie\u0144", "maj", "czerwiec", "lipiec", "sierpie\u0144", "wrzesie\u0144", "pa\u017Adziernik", "listopad", "grudzie\u0144"], dayOfWeekShort: ["nd", "pn", "wt", "\u015Br", "cz", "pt", "sb"], dayOfWeek: ["niedziela", "poniedzia\u0142ek", "wtorek", "\u015Broda", "czwartek", "pi\u0105tek", "sobota"] }, pt: { months: ["Janeiro", "Fevereiro", "Mar\xE7o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], dayOfWeekShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"], dayOfWeek: ["Domingo", "Segunda", "Ter\xE7a", "Quarta", "Quinta", "Sexta", "S\xE1bado"] }, ch: { months: ["\u4E00\u6708", "\u4E8C\u6708", "\u4E09\u6708", "\u56DB\u6708", "\u4E94\u6708", "\u516D\u6708", "\u4E03\u6708", "\u516B\u6708", "\u4E5D\u6708", "\u5341\u6708", "\u5341\u4E00\u6708", "\u5341\u4E8C\u6708"], dayOfWeekShort: ["\u65E5", "\u4E00", "\u4E8C", "\u4E09", "\u56DB", "\u4E94", "\u516D"] }, se: { months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"], dayOfWeekShort: ["S\xF6n", "M\xE5n", "Tis", "Ons", "Tor", "Fre", "L\xF6r"] }, km: { months: ["\u1798\u1780\u179A\u17B6\u200B", "\u1780\u17BB\u1798\u17D2\u1797\u17C8", "\u1798\u17B7\u1793\u17B6\u200B", "\u1798\u17C1\u179F\u17B6\u200B", "\u17A7\u179F\u1797\u17B6\u200B", "\u1798\u17B7\u1790\u17BB\u1793\u17B6\u200B", "\u1780\u1780\u17D2\u1780\u178A\u17B6\u200B", "\u179F\u17B8\u17A0\u17B6\u200B", "\u1780\u1789\u17D2\u1789\u17B6\u200B", "\u178F\u17BB\u179B\u17B6\u200B", "\u179C\u17B7\u1785\u17D2\u1786\u17B7\u1780\u17B6", "\u1792\u17D2\u1793\u17BC\u200B"], dayOfWeekShort: ["\u17A2\u17B6\u1791\u17B7\u200B", "\u1785\u17D0\u1793\u17D2\u1791\u200B", "\u17A2\u1784\u17D2\u1782\u17B6\u179A\u200B", "\u1796\u17BB\u1792\u200B", "\u1796\u17D2\u179A\u17A0\u200B\u200B", "\u179F\u17BB\u1780\u17D2\u179A\u200B", "\u179F\u17C5\u179A\u17CD"], dayOfWeek: ["\u17A2\u17B6\u1791\u17B7\u178F\u17D2\u1799\u200B", "\u1785\u17D0\u1793\u17D2\u1791\u200B", "\u17A2\u1784\u17D2\u1782\u17B6\u179A\u200B", "\u1796\u17BB\u1792\u200B", "\u1796\u17D2\u179A\u17A0\u179F\u17D2\u1794\u178F\u17B7\u17CD\u200B", "\u179F\u17BB\u1780\u17D2\u179A\u200B", "\u179F\u17C5\u179A\u17CD"] }, kr: { months: ["1\uC6D4", "2\uC6D4", "3\uC6D4", "4\uC6D4", "5\uC6D4", "6\uC6D4", "7\uC6D4", "8\uC6D4", "9\uC6D4", "10\uC6D4", "11\uC6D4", "12\uC6D4"], dayOfWeekShort: ["\uC77C", "\uC6D4", "\uD654", "\uC218", "\uBAA9", "\uAE08", "\uD1A0"], dayOfWeek: ["\uC77C\uC694\uC77C", "\uC6D4\uC694\uC77C", "\uD654\uC694\uC77C", "\uC218\uC694\uC77C", "\uBAA9\uC694\uC77C", "\uAE08\uC694\uC77C", "\uD1A0\uC694\uC77C"] }, it: { months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"], dayOfWeekShort: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"], dayOfWeek: ["Domenica", "Luned\xEC", "Marted\xEC", "Mercoled\xEC", "Gioved\xEC", "Venerd\xEC", "Sabato"] }, da: { months: ["Januar", "Februar", "Marts", "April", "Maj", "Juni", "Juli", "August", "September", "Oktober", "November", "December"], dayOfWeekShort: ["S\xF8n", "Man", "Tir", "Ons", "Tor", "Fre", "L\xF8r"], dayOfWeek: ["s\xF8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\xF8rdag"] }, no: { months: ["Januar", "Februar", "Mars", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Desember"], dayOfWeekShort: ["S\xF8n", "Man", "Tir", "Ons", "Tor", "Fre", "L\xF8r"], dayOfWeek: ["S\xF8ndag", "Mandag", "Tirsdag", "Onsdag", "Torsdag", "Fredag", "L\xF8rdag"] }, ja: { months: ["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], dayOfWeekShort: ["\u65E5", "\u6708", "\u706B", "\u6C34", "\u6728", "\u91D1", "\u571F"], dayOfWeek: ["\u65E5\u66DC", "\u6708\u66DC", "\u706B\u66DC", "\u6C34\u66DC", "\u6728\u66DC", "\u91D1\u66DC", "\u571F\u66DC"] }, vi: { months: ["Th\xE1ng 1", "Th\xE1ng 2", "Th\xE1ng 3", "Th\xE1ng 4", "Th\xE1ng 5", "Th\xE1ng 6", "Th\xE1ng 7", "Th\xE1ng 8", "Th\xE1ng 9", "Th\xE1ng 10", "Th\xE1ng 11", "Th\xE1ng 12"], dayOfWeekShort: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"], dayOfWeek: ["Ch\u1EE7 nh\u1EADt", "Th\u1EE9 hai", "Th\u1EE9 ba", "Th\u1EE9 t\u01B0", "Th\u1EE9 n\u0103m", "Th\u1EE9 s\xE1u", "Th\u1EE9 b\u1EA3y"] }, sl: { months: ["Januar", "Februar", "Marec", "April", "Maj", "Junij", "Julij", "Avgust", "September", "Oktober", "November", "December"], dayOfWeekShort: ["Ned", "Pon", "Tor", "Sre", "\u010Cet", "Pet", "Sob"], dayOfWeek: ["Nedelja", "Ponedeljek", "Torek", "Sreda", "\u010Cetrtek", "Petek", "Sobota"] }, cs: { months: ["Leden", "\xDAnor", "B\u0159ezen", "Duben", "Kv\u011Bten", "\u010Cerven", "\u010Cervenec", "Srpen", "Z\xE1\u0159\xED", "\u0158\xEDjen", "Listopad", "Prosinec"], dayOfWeekShort: ["Ne", "Po", "\xDAt", "St", "\u010Ct", "P\xE1", "So"] }, hu: { months: ["Janu\xE1r", "Febru\xE1r", "M\xE1rcius", "\xC1prilis", "M\xE1jus", "J\xFAnius", "J\xFAlius", "Augusztus", "Szeptember", "Okt\xF3ber", "November", "December"], dayOfWeekShort: ["Va", "H\xE9", "Ke", "Sze", "Cs", "P\xE9", "Szo"], dayOfWeek: ["vas\xE1rnap", "h\xE9tf\u0151", "kedd", "szerda", "cs\xFCt\xF6rt\xF6k", "p\xE9ntek", "szombat"] }, az: { months: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], dayOfWeekShort: ["B", "Be", "\xC7a", "\xC7", "Ca", "C", "\u015E"], dayOfWeek: ["Bazar", "Bazar ert\u0259si", "\xC7\u0259r\u015F\u0259nb\u0259 ax\u015Fam\u0131", "\xC7\u0259r\u015F\u0259nb\u0259", "C\xFCm\u0259 ax\u015Fam\u0131", "C\xFCm\u0259", "\u015E\u0259nb\u0259"] }, bs: { months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"], dayOfWeekShort: ["Ned", "Pon", "Uto", "Sri", "\u010Cet", "Pet", "Sub"], dayOfWeek: ["Nedjelja", "Ponedjeljak", "Utorak", "Srijeda", "\u010Cetvrtak", "Petak", "Subota"] }, ca: { months: ["Gener", "Febrer", "Mar\xE7", "Abril", "Maig", "Juny", "Juliol", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"], dayOfWeekShort: ["Dg", "Dl", "Dt", "Dc", "Dj", "Dv", "Ds"], dayOfWeek: ["Diumenge", "Dilluns", "Dimarts", "Dimecres", "Dijous", "Divendres", "Dissabte"] }, "en-GB": { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dayOfWeekShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] }, et: { months: ["Jaanuar", "Veebruar", "M\xE4rts", "Aprill", "Mai", "Juuni", "Juuli", "August", "September", "Oktoober", "November", "Detsember"], dayOfWeekShort: ["P", "E", "T", "K", "N", "R", "L"], dayOfWeek: ["P\xFChap\xE4ev", "Esmasp\xE4ev", "Teisip\xE4ev", "Kolmap\xE4ev", "Neljap\xE4ev", "Reede", "Laup\xE4ev"] }, eu: { months: ["Urtarrila", "Otsaila", "Martxoa", "Apirila", "Maiatza", "Ekaina", "Uztaila", "Abuztua", "Iraila", "Urria", "Azaroa", "Abendua"], dayOfWeekShort: ["Ig.", "Al.", "Ar.", "Az.", "Og.", "Or.", "La."], dayOfWeek: ["Igandea", "Astelehena", "Asteartea", "Asteazkena", "Osteguna", "Ostirala", "Larunbata"] }, fi: { months: ["Tammikuu", "Helmikuu", "Maaliskuu", "Huhtikuu", "Toukokuu", "Kes\xE4kuu", "Hein\xE4kuu", "Elokuu", "Syyskuu", "Lokakuu", "Marraskuu", "Joulukuu"], dayOfWeekShort: ["Su", "Ma", "Ti", "Ke", "To", "Pe", "La"], dayOfWeek: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"] }, gl: { months: ["Xan", "Feb", "Maz", "Abr", "Mai", "Xun", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], dayOfWeekShort: ["Dom", "Lun", "Mar", "Mer", "Xov", "Ven", "Sab"], dayOfWeek: ["Domingo", "Luns", "Martes", "M\xE9rcores", "Xoves", "Venres", "S\xE1bado"] }, hr: { months: ["Sije\u010Danj", "Velja\u010Da", "O\u017Eujak", "Travanj", "Svibanj", "Lipanj", "Srpanj", "Kolovoz", "Rujan", "Listopad", "Studeni", "Prosinac"], dayOfWeekShort: ["Ned", "Pon", "Uto", "Sri", "\u010Cet", "Pet", "Sub"], dayOfWeek: ["Nedjelja", "Ponedjeljak", "Utorak", "Srijeda", "\u010Cetvrtak", "Petak", "Subota"] }, ko: { months: ["1\uC6D4", "2\uC6D4", "3\uC6D4", "4\uC6D4", "5\uC6D4", "6\uC6D4", "7\uC6D4", "8\uC6D4", "9\uC6D4", "10\uC6D4", "11\uC6D4", "12\uC6D4"], dayOfWeekShort: ["\uC77C", "\uC6D4", "\uD654", "\uC218", "\uBAA9", "\uAE08", "\uD1A0"], dayOfWeek: ["\uC77C\uC694\uC77C", "\uC6D4\uC694\uC77C", "\uD654\uC694\uC77C", "\uC218\uC694\uC77C", "\uBAA9\uC694\uC77C", "\uAE08\uC694\uC77C", "\uD1A0\uC694\uC77C"] }, lt: { months: ["Sausio", "Vasario", "Kovo", "Baland\u017Eio", "Gegu\u017E\u0117s", "Bir\u017Eelio", "Liepos", "Rugpj\u016B\u010Dio", "Rugs\u0117jo", "Spalio", "Lapkri\u010Dio", "Gruod\u017Eio"], dayOfWeekShort: ["Sek", "Pir", "Ant", "Tre", "Ket", "Pen", "\u0160e\u0161"], dayOfWeek: ["Sekmadienis", "Pirmadienis", "Antradienis", "Tre\u010Diadienis", "Ketvirtadienis", "Penktadienis", "\u0160e\u0161tadienis"] }, lv: { months: ["Janv\u0101ris", "Febru\u0101ris", "Marts", "Apr\u012Blis ", "Maijs", "J\u016Bnijs", "J\u016Blijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"], dayOfWeekShort: ["Sv", "Pr", "Ot", "Tr", "Ct", "Pk", "St"], dayOfWeek: ["Sv\u0113tdiena", "Pirmdiena", "Otrdiena", "Tre\u0161diena", "Ceturtdiena", "Piektdiena", "Sestdiena"] }, mk: { months: ["\u0458\u0430\u043D\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043C\u0430\u0440\u0442", "\u0430\u043F\u0440\u0438\u043B", "\u043C\u0430\u0458", "\u0458\u0443\u043D\u0438", "\u0458\u0443\u043B\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438", "\u043E\u043A\u0442\u043E\u043C\u0432\u0440\u0438", "\u043D\u043E\u0435\u043C\u0432\u0440\u0438", "\u0434\u0435\u043A\u0435\u043C\u0432\u0440\u0438"], dayOfWeekShort: ["\u043D\u0435\u0434", "\u043F\u043E\u043D", "\u0432\u0442\u043E", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043F\u0435\u0442", "\u0441\u0430\u0431"], dayOfWeek: ["\u041D\u0435\u0434\u0435\u043B\u0430", "\u041F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A", "\u0412\u0442\u043E\u0440\u043D\u0438\u043A", "\u0421\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0440\u0442\u043E\u043A", "\u041F\u0435\u0442\u043E\u043A", "\u0421\u0430\u0431\u043E\u0442\u0430"] }, mn: { months: ["1-\u0440 \u0441\u0430\u0440", "2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", "6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], dayOfWeekShort: ["\u0414\u0430\u0432", "\u041C\u044F\u0433", "\u041B\u0445\u0430", "\u041F\u04AF\u0440", "\u0411\u0441\u043D", "\u0411\u044F\u043C", "\u041D\u044F\u043C"], dayOfWeek: ["\u0414\u0430\u0432\u0430\u0430", "\u041C\u044F\u0433\u043C\u0430\u0440", "\u041B\u0445\u0430\u0433\u0432\u0430", "\u041F\u04AF\u0440\u044D\u0432", "\u0411\u0430\u0430\u0441\u0430\u043D", "\u0411\u044F\u043C\u0431\u0430", "\u041D\u044F\u043C"] }, "pt-BR": { months: ["Janeiro", "Fevereiro", "Mar\xE7o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], dayOfWeekShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "S\xE1b"], dayOfWeek: ["Domingo", "Segunda", "Ter\xE7a", "Quarta", "Quinta", "Sexta", "S\xE1bado"] }, sk: { months: ["Janu\xE1r", "Febru\xE1r", "Marec", "Apr\xEDl", "M\xE1j", "J\xFAn", "J\xFAl", "August", "September", "Okt\xF3ber", "November", "December"], dayOfWeekShort: ["Ne", "Po", "Ut", "St", "\u0160t", "Pi", "So"], dayOfWeek: ["Nede\u013Ea", "Pondelok", "Utorok", "Streda", "\u0160tvrtok", "Piatok", "Sobota"] }, sq: { months: ["Janar", "Shkurt", "Mars", "Prill", "Maj", "Qershor", "Korrik", "Gusht", "Shtator", "Tetor", "N\xEBntor", "Dhjetor"], dayOfWeekShort: ["Die", "H\xEBn", "Mar", "M\xEBr", "Enj", "Pre", "Shtu"], dayOfWeek: ["E Diel", "E H\xEBn\xEB", "E Mart\u0113", "E M\xEBrkur\xEB", "E Enjte", "E Premte", "E Shtun\xEB"] }, "sr-YU": { months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"], dayOfWeekShort: ["Ned", "Pon", "Uto", "Sre", "\u010Det", "Pet", "Sub"], dayOfWeek: ["Nedelja", "Ponedeljak", "Utorak", "Sreda", "\u010Cetvrtak", "Petak", "Subota"] }, sr: { months: ["\u0458\u0430\u043D\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043C\u0430\u0440\u0442", "\u0430\u043F\u0440\u0438\u043B", "\u043C\u0430\u0458", "\u0458\u0443\u043D", "\u0458\u0443\u043B", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043F\u0442\u0435\u043C\u0431\u0430\u0440", "\u043E\u043A\u0442\u043E\u0431\u0430\u0440", "\u043D\u043E\u0432\u0435\u043C\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043C\u0431\u0430\u0440"], dayOfWeekShort: ["\u043D\u0435\u0434", "\u043F\u043E\u043D", "\u0443\u0442\u043E", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043F\u0435\u0442", "\u0441\u0443\u0431"], dayOfWeek: ["\u041D\u0435\u0434\u0435\u0459\u0430", "\u041F\u043E\u043D\u0435\u0434\u0435\u0459\u0430\u043A", "\u0423\u0442\u043E\u0440\u0430\u043A", "\u0421\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0440\u0442\u0430\u043A", "\u041F\u0435\u0442\u0430\u043A", "\u0421\u0443\u0431\u043E\u0442\u0430"] }, sv: { months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"], dayOfWeekShort: ["S\xF6n", "M\xE5n", "Tis", "Ons", "Tor", "Fre", "L\xF6r"], dayOfWeek: ["S\xF6ndag", "M\xE5ndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "L\xF6rdag"] }, "zh-TW": { months: ["\u4E00\u6708", "\u4E8C\u6708", "\u4E09\u6708", "\u56DB\u6708", "\u4E94\u6708", "\u516D\u6708", "\u4E03\u6708", "\u516B\u6708", "\u4E5D\u6708", "\u5341\u6708", "\u5341\u4E00\u6708", "\u5341\u4E8C\u6708"], dayOfWeekShort: ["\u65E5", "\u4E00", "\u4E8C", "\u4E09", "\u56DB", "\u4E94", "\u516D"], dayOfWeek: ["\u661F\u671F\u65E5", "\u661F\u671F\u4E00", "\u661F\u671F\u4E8C", "\u661F\u671F\u4E09", "\u661F\u671F\u56DB", "\u661F\u671F\u4E94", "\u661F\u671F\u516D"] }, zh: { months: ["\u4E00\u6708", "\u4E8C\u6708", "\u4E09\u6708", "\u56DB\u6708", "\u4E94\u6708", "\u516D\u6708", "\u4E03\u6708", "\u516B\u6708", "\u4E5D\u6708", "\u5341\u6708", "\u5341\u4E00\u6708", "\u5341\u4E8C\u6708"], dayOfWeekShort: ["\u65E5", "\u4E00", "\u4E8C", "\u4E09", "\u56DB", "\u4E94", "\u516D"], dayOfWeek: ["\u661F\u671F\u65E5", "\u661F\u671F\u4E00", "\u661F\u671F\u4E8C", "\u661F\u671F\u4E09", "\u661F\u671F\u56DB", "\u661F\u671F\u4E94", "\u661F\u671F\u516D"] }, ug: { months: ["1-\u0626\u0627\u064A", "2-\u0626\u0627\u064A", "3-\u0626\u0627\u064A", "4-\u0626\u0627\u064A", "5-\u0626\u0627\u064A", "6-\u0626\u0627\u064A", "7-\u0626\u0627\u064A", "8-\u0626\u0627\u064A", "9-\u0626\u0627\u064A", "10-\u0626\u0627\u064A", "11-\u0626\u0627\u064A", "12-\u0626\u0627\u064A"], dayOfWeek: ["\u064A\u06D5\u0643\u0634\u06D5\u0646\u0628\u06D5", "\u062F\u06C8\u0634\u06D5\u0646\u0628\u06D5", "\u0633\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5", "\u0686\u0627\u0631\u0634\u06D5\u0646\u0628\u06D5", "\u067E\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5", "\u062C\u06C8\u0645\u06D5", "\u0634\u06D5\u0646\u0628\u06D5"] }, he: { months: ["\u05D9\u05E0\u05D5\u05D0\u05E8", "\u05E4\u05D1\u05E8\u05D5\u05D0\u05E8", "\u05DE\u05E8\u05E5", "\u05D0\u05E4\u05E8\u05D9\u05DC", "\u05DE\u05D0\u05D9", "\u05D9\u05D5\u05E0\u05D9", "\u05D9\u05D5\u05DC\u05D9", "\u05D0\u05D5\u05D2\u05D5\u05E1\u05D8", "\u05E1\u05E4\u05D8\u05DE\u05D1\u05E8", "\u05D0\u05D5\u05E7\u05D8\u05D5\u05D1\u05E8", "\u05E0\u05D5\u05D1\u05DE\u05D1\u05E8", "\u05D3\u05E6\u05DE\u05D1\u05E8"], dayOfWeekShort: ["\u05D0'", "\u05D1'", "\u05D2'", "\u05D3'", "\u05D4'", "\u05D5'", "\u05E9\u05D1\u05EA"], dayOfWeek: ["\u05E8\u05D0\u05E9\u05D5\u05DF", "\u05E9\u05E0\u05D9", "\u05E9\u05DC\u05D9\u05E9\u05D9", "\u05E8\u05D1\u05D9\u05E2\u05D9", "\u05D7\u05DE\u05D9\u05E9\u05D9", "\u05E9\u05D9\u05E9\u05D9", "\u05E9\u05D1\u05EA", "\u05E8\u05D0\u05E9\u05D5\u05DF"] }, hy: { months: ["\u0540\u0578\u0582\u0576\u057E\u0561\u0580", "\u0553\u0565\u057F\u0580\u057E\u0561\u0580", "\u0544\u0561\u0580\u057F", "\u0531\u057A\u0580\u056B\u056C", "\u0544\u0561\u0575\u056B\u057D", "\u0540\u0578\u0582\u0576\u056B\u057D", "\u0540\u0578\u0582\u056C\u056B\u057D", "\u0555\u0563\u0578\u057D\u057F\u0578\u057D", "\u054D\u0565\u057A\u057F\u0565\u0574\u0562\u0565\u0580", "\u0540\u0578\u056F\u057F\u0565\u0574\u0562\u0565\u0580", "\u0546\u0578\u0575\u0565\u0574\u0562\u0565\u0580", "\u0534\u0565\u056F\u057F\u0565\u0574\u0562\u0565\u0580"], dayOfWeekShort: ["\u053F\u056B", "\u0535\u0580\u056F", "\u0535\u0580\u0584", "\u0549\u0578\u0580", "\u0540\u0576\u0563", "\u0548\u0582\u0580\u0562", "\u0547\u0562\u0569"], dayOfWeek: ["\u053F\u056B\u0580\u0561\u056F\u056B", "\u0535\u0580\u056F\u0578\u0582\u0577\u0561\u0562\u0569\u056B", "\u0535\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056B", "\u0549\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056B", "\u0540\u056B\u0576\u0563\u0577\u0561\u0562\u0569\u056B", "\u0548\u0582\u0580\u0562\u0561\u0569", "\u0547\u0561\u0562\u0561\u0569"] }, kg: { months: ["\u04AE\u0447\u0442\u04AF\u043D \u0430\u0439\u044B", "\u0411\u0438\u0440\u0434\u0438\u043D \u0430\u0439\u044B", "\u0416\u0430\u043B\u0433\u0430\u043D \u041A\u0443\u0440\u0430\u043D", "\u0427\u044B\u043D \u041A\u0443\u0440\u0430\u043D", "\u0411\u0443\u0433\u0443", "\u041A\u0443\u043B\u0436\u0430", "\u0422\u0435\u043A\u0435", "\u0411\u0430\u0448 \u041E\u043E\u043D\u0430", "\u0410\u044F\u043A \u041E\u043E\u043D\u0430", "\u0422\u043E\u0433\u0443\u0437\u0434\u0443\u043D \u0430\u0439\u044B", "\u0416\u0435\u0442\u0438\u043D\u0438\u043D \u0430\u0439\u044B", "\u0411\u0435\u0448\u0442\u0438\u043D \u0430\u0439\u044B"], dayOfWeekShort: ["\u0416\u0435\u043A", "\u0414\u04AF\u0439", "\u0428\u0435\u0439", "\u0428\u0430\u0440", "\u0411\u0435\u0439", "\u0416\u0443\u043C", "\u0418\u0448\u0435"], dayOfWeek: ["\u0416\u0435\u043A\u0448\u0435\u043C\u0431", "\u0414\u04AF\u0439\u0448\u04E9\u043C\u0431", "\u0428\u0435\u0439\u0448\u0435\u043C\u0431", "\u0428\u0430\u0440\u0448\u0435\u043C\u0431", "\u0411\u0435\u0439\u0448\u0435\u043C\u0431\u0438", "\u0416\u0443\u043C\u0430", "\u0418\u0448\u0435\u043D\u0431"] }, rm: { months: ["Schaner", "Favrer", "Mars", "Avrigl", "Matg", "Zercladur", "Fanadur", "Avust", "Settember", "October", "November", "December"], dayOfWeekShort: ["Du", "Gli", "Ma", "Me", "Gie", "Ve", "So"], dayOfWeek: ["Dumengia", "Glindesdi", "Mardi", "Mesemna", "Gievgia", "Venderdi", "Sonda"] }, ka: { months: ["\u10D8\u10D0\u10DC\u10D5\u10D0\u10E0\u10D8", "\u10D7\u10D4\u10D1\u10D4\u10E0\u10D5\u10D0\u10DA\u10D8", "\u10DB\u10D0\u10E0\u10E2\u10D8", "\u10D0\u10DE\u10E0\u10D8\u10DA\u10D8", "\u10DB\u10D0\u10D8\u10E1\u10D8", "\u10D8\u10D5\u10DC\u10D8\u10E1\u10D8", "\u10D8\u10D5\u10DA\u10D8\u10E1\u10D8", "\u10D0\u10D2\u10D5\u10D8\u10E1\u10E2\u10DD", "\u10E1\u10D4\u10E5\u10E2\u10D4\u10DB\u10D1\u10D4\u10E0\u10D8", "\u10DD\u10E5\u10E2\u10DD\u10DB\u10D1\u10D4\u10E0\u10D8", "\u10DC\u10DD\u10D4\u10DB\u10D1\u10D4\u10E0\u10D8", "\u10D3\u10D4\u10D9\u10D4\u10DB\u10D1\u10D4\u10E0\u10D8"], dayOfWeekShort: ["\u10D9\u10D5", "\u10DD\u10E0\u10E8", "\u10E1\u10D0\u10DB\u10E8", "\u10DD\u10D7\u10EE", "\u10EE\u10E3\u10D7", "\u10DE\u10D0\u10E0", "\u10E8\u10D0\u10D1"], dayOfWeek: ["\u10D9\u10D5\u10D8\u10E0\u10D0", "\u10DD\u10E0\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8", "\u10E1\u10D0\u10DB\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8", "\u10DD\u10D7\u10EE\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8", "\u10EE\u10E3\u10D7\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8", "\u10DE\u10D0\u10E0\u10D0\u10E1\u10D9\u10D4\u10D5\u10D8", "\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8"] } }, ownerDocument: document, contentWindow: window, value: "", rtl: false, format: "Y/m/d H:i", formatTime: "H:i", formatDate: "Y/m/d", startDate: false, step: 60, monthChangeSpinner: true, closeOnDateSelect: false, closeOnTimeSelect: true, closeOnWithoutClick: true, closeOnInputClick: true, openOnFocus: true, timepicker: true, datepicker: true, weeks: false, defaultTime: false, defaultDate: false, minDate: false, maxDate: false, minTime: false, maxTime: false, minDateTime: false, maxDateTime: false, allowTimes: [], opened: false, initTime: true, inline: false, theme: "", touchMovedThreshold: 5, onSelectDate: function() {
      }, onSelectTime: function() {
      }, onChangeMonth: function() {
      }, onGetWeekOfYear: function() {
      }, onChangeYear: function() {
      }, onChangeDateTime: function() {
      }, onShow: function() {
      }, onClose: function() {
      }, onGenerate: function() {
      }, withoutCopyright: true, inverseButton: false, hours12: false, next: "xdsoft_next", prev: "xdsoft_prev", dayOfWeekStart: 0, parentID: "body", timeHeightInTimePicker: 25, timepickerScrollbar: true, todayButton: true, prevButton: true, nextButton: true, defaultSelect: true, scrollMonth: true, scrollTime: true, scrollInput: true, lazyInit: false, mask: false, validateOnBlur: true, allowBlank: true, yearStart: 1950, yearEnd: 2050, monthStart: 0, monthEnd: 11, style: "", id: "", fixed: false, roundTime: "round", className: "", weekends: [], highlightedDates: [], highlightedPeriods: [], allowDates: [], allowDateRe: null, disabledDates: [], disabledWeekDays: [], yearOffset: 0, beforeShowDay: null, enterLikeTab: true, showApplyButton: false, insideParent: false }, E = null, n = null, R = "en", a = { meridiem: ["AM", "PM"] }, r = function() {
        var e = s.i18n[R], t2 = { days: e.dayOfWeek, daysShort: e.dayOfWeekShort, months: e.months, monthsShort: L.map(e.months, function(e2) {
          return e2.substring(0, 3);
        }) };
        "function" == typeof DateFormatter && (E = n = new DateFormatter({ dateSettings: L.extend({}, a, t2) }));
      }, o = { moment: { default_options: { format: "YYYY/MM/DD HH:mm", formatDate: "YYYY/MM/DD", formatTime: "HH:mm" }, formatter: { parseDate: function(e, t2) {
        if (i(t2))
          return n.parseDate(e, t2);
        var a2 = moment(e, t2);
        return !!a2.isValid() && a2.toDate();
      }, formatDate: function(e, t2) {
        return i(t2) ? n.formatDate(e, t2) : moment(e).format(t2);
      }, formatMask: function(e) {
        return e.replace(/Y{4}/g, "9999").replace(/Y{2}/g, "99").replace(/M{2}/g, "19").replace(/D{2}/g, "39").replace(/H{2}/g, "29").replace(/m{2}/g, "59").replace(/s{2}/g, "59");
      } } } };
      L.datetimepicker = { setLocale: function(e) {
        var t2 = s.i18n[e] ? e : "en";
        R !== t2 && (R = t2, r());
      }, setDateFormatter: function(e) {
        if ("string" == typeof e && o.hasOwnProperty(e)) {
          var t2 = o[e];
          L.extend(s, t2.default_options), E = t2.formatter;
        } else
          E = e;
      } };
      var t = { RFC_2822: "D, d M Y H:i:s O", ATOM: "Y-m-dTH:i:sP", ISO_8601: "Y-m-dTH:i:sO", RFC_822: "D, d M y H:i:s O", RFC_850: "l, d-M-y H:i:s T", RFC_1036: "D, d M y H:i:s O", RFC_1123: "D, d M Y H:i:s O", RSS: "D, d M Y H:i:s O", W3C: "Y-m-dTH:i:sP" }, i = function(e) {
        return -1 !== Object.values(t).indexOf(e);
      };
      function m(e, t2, a2) {
        this.date = e, this.desc = t2, this.style = a2;
      }
      L.extend(L.datetimepicker, t), r(), window.getComputedStyle || (window.getComputedStyle = function(a2) {
        return this.el = a2, this.getPropertyValue = function(e) {
          var t2 = /(-([a-z]))/g;
          return "float" === e && (e = "styleFloat"), t2.test(e) && (e = e.replace(t2, function(e2, t3, a3) {
            return a3.toUpperCase();
          })), a2.currentStyle[e] || null;
        }, this;
      }), Array.prototype.indexOf || (Array.prototype.indexOf = function(e, t2) {
        var a2, n2;
        for (a2 = t2 || 0, n2 = this.length; a2 < n2; a2 += 1)
          if (this[a2] === e)
            return a2;
        return -1;
      }), Date.prototype.countDaysInMonth = function() {
        return new Date(this.getFullYear(), this.getMonth() + 1, 0).getDate();
      }, L.fn.xdsoftScroller = function(p, D) {
        return this.each(function() {
          var o2, i2, s2, d, u, l = L(this), a2 = function(e) {
            var t3, a3 = { x: 0, y: 0 };
            return "touchstart" === e.type || "touchmove" === e.type || "touchend" === e.type || "touchcancel" === e.type ? (t3 = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0], a3.x = t3.clientX, a3.y = t3.clientY) : "mousedown" !== e.type && "mouseup" !== e.type && "mousemove" !== e.type && "mouseover" !== e.type && "mouseout" !== e.type && "mouseenter" !== e.type && "mouseleave" !== e.type || (a3.x = e.clientX, a3.y = e.clientY), a3;
          }, f = 100, n2 = false, r2 = 0, c = 0, m2 = 0, t2 = false, h = 0, g = function() {
          };
          "hide" !== D ? (L(this).hasClass("xdsoft_scroller_box") || (o2 = l.children().eq(0), i2 = l[0].clientHeight, s2 = o2[0].offsetHeight, d = L('<div class="xdsoft_scrollbar"></div>'), u = L('<div class="xdsoft_scroller"></div>'), d.append(u), l.addClass("xdsoft_scroller_box").append(d), g = function(e) {
            var t3 = a2(e).y - r2 + h;
            t3 < 0 && (t3 = 0), t3 + u[0].offsetHeight > m2 && (t3 = m2 - u[0].offsetHeight), l.trigger("scroll_element.xdsoft_scroller", [f ? t3 / f : 0]);
          }, u.on("touchstart.xdsoft_scroller mousedown.xdsoft_scroller", function(e) {
            i2 || l.trigger("resize_scroll.xdsoft_scroller", [D]), r2 = a2(e).y, h = parseInt(u.css("margin-top"), 10), m2 = d[0].offsetHeight, "mousedown" === e.type || "touchstart" === e.type ? (p.ownerDocument && L(p.ownerDocument.body).addClass("xdsoft_noselect"), L([p.ownerDocument.body, p.contentWindow]).on("touchend mouseup.xdsoft_scroller", function e2() {
              L([p.ownerDocument.body, p.contentWindow]).off("touchend mouseup.xdsoft_scroller", e2).off("mousemove.xdsoft_scroller", g).removeClass("xdsoft_noselect");
            }), L(p.ownerDocument.body).on("mousemove.xdsoft_scroller", g)) : (t2 = true, e.stopPropagation(), e.preventDefault());
          }).on("touchmove", function(e) {
            t2 && (e.preventDefault(), g(e));
          }).on("touchend touchcancel", function() {
            t2 = false, h = 0;
          }), l.on("scroll_element.xdsoft_scroller", function(e, t3) {
            i2 || l.trigger("resize_scroll.xdsoft_scroller", [t3, true]), t3 = 1 < t3 ? 1 : t3 < 0 || isNaN(t3) ? 0 : t3, u.css("margin-top", f * t3), setTimeout(function() {
              o2.css("marginTop", -parseInt((o2[0].offsetHeight - i2) * t3, 10));
            }, 10);
          }).on("resize_scroll.xdsoft_scroller", function(e, t3, a3) {
            var n3, r3;
            i2 = l[0].clientHeight, s2 = o2[0].offsetHeight, r3 = (n3 = i2 / s2) * d[0].offsetHeight, 1 < n3 ? u.hide() : (u.show(), u.css("height", parseInt(10 < r3 ? r3 : 10, 10)), f = d[0].offsetHeight - u[0].offsetHeight, true !== a3 && l.trigger("scroll_element.xdsoft_scroller", [t3 || Math.abs(parseInt(o2.css("marginTop"), 10)) / (s2 - i2)]));
          }), l.on("mousewheel", function(e) {
            var t3 = Math.abs(parseInt(o2.css("marginTop"), 10));
            return (t3 -= 20 * e.deltaY) < 0 && (t3 = 0), l.trigger("scroll_element.xdsoft_scroller", [t3 / (s2 - i2)]), e.stopPropagation(), false;
          }), l.on("touchstart", function(e) {
            n2 = a2(e), c = Math.abs(parseInt(o2.css("marginTop"), 10));
          }), l.on("touchmove", function(e) {
            if (n2) {
              e.preventDefault();
              var t3 = a2(e);
              l.trigger("scroll_element.xdsoft_scroller", [(c - (t3.y - n2.y)) / (s2 - i2)]);
            }
          }), l.on("touchend touchcancel", function() {
            n2 = false, c = 0;
          })), l.trigger("resize_scroll.xdsoft_scroller", [D])) : l.find(".xdsoft_scrollbar").hide();
        });
      }, L.fn.datetimepicker = function(H, a2) {
        var n2, r2, o2 = this, p = 17, D = 13, y = 27, v = 37, b = 38, k = 39, x = 40, T = 9, S = 116, M = 65, w = 67, j = 86, J = 90, z = 89, I = false, N = L.isPlainObject(H) || !H ? L.extend(true, {}, s, H) : L.extend(true, {}, s), i2 = 0;
        return n2 = function(O) {
          var t2, n3, a3, r3, W, h, _ = L('<div class="xdsoft_datetimepicker xdsoft_noselect"></div>'), e = L('<div class="xdsoft_copyright"><a target="_blank" href="http://xdsoft.net/jqplugins/datetimepicker/">xdsoft.net</a></div>'), g = L('<div class="xdsoft_datepicker active"></div>'), F = L('<div class="xdsoft_monthpicker"><button type="button" class="xdsoft_prev"></button><button type="button" class="xdsoft_today_button"></button><div class="xdsoft_label xdsoft_month"><span></span><i></i></div><div class="xdsoft_label xdsoft_year"><span></span><i></i></div><button type="button" class="xdsoft_next"></button></div>'), C = L('<div class="xdsoft_calendar"></div>'), o3 = L('<div class="xdsoft_timepicker active"><button type="button" class="xdsoft_prev"></button><div class="xdsoft_time_box"></div><button type="button" class="xdsoft_next"></button></div>'), u = o3.find(".xdsoft_time_box").eq(0), P = L('<div class="xdsoft_time_variant"></div>'), i3 = L('<button type="button" class="xdsoft_save_selected blue-gradient-button">Save Selected</button>'), Y = L('<div class="xdsoft_select xdsoft_monthselect"><div></div></div>'), A = L('<div class="xdsoft_select xdsoft_yearselect"><div></div></div>'), s2 = false, d = 0;
          N.id && _.attr("id", N.id), N.style && _.attr("style", N.style), N.weeks && _.addClass("xdsoft_showweeks"), N.rtl && _.addClass("xdsoft_rtl"), _.addClass("xdsoft_" + N.theme), _.addClass(N.className), F.find(".xdsoft_month span").after(Y), F.find(".xdsoft_year span").after(A), F.find(".xdsoft_month,.xdsoft_year").on("touchstart mousedown.xdsoft", function(e2) {
            var t3, a4, n4 = L(this).find(".xdsoft_select").eq(0), r4 = 0, o4 = 0, i4 = n4.is(":visible");
            for (F.find(".xdsoft_select").hide(), W.currentTime && (r4 = W.currentTime[L(this).hasClass("xdsoft_month") ? "getMonth" : "getFullYear"]()), n4[i4 ? "hide" : "show"](), t3 = n4.find("div.xdsoft_option"), a4 = 0; a4 < t3.length && t3.eq(a4).data("value") !== r4; a4 += 1)
              o4 += t3[0].offsetHeight;
            return n4.xdsoftScroller(N, o4 / (n4.children()[0].offsetHeight - n4[0].clientHeight)), e2.stopPropagation(), false;
          });
          var l = function(e2) {
            var t3 = e2.originalEvent, a4 = t3.touches ? t3.touches[0] : t3;
            this.touchStartPosition = this.touchStartPosition || a4;
            var n4 = Math.abs(this.touchStartPosition.clientX - a4.clientX), r4 = Math.abs(this.touchStartPosition.clientY - a4.clientY);
            Math.sqrt(n4 * n4 + r4 * r4) > N.touchMovedThreshold && (this.touchMoved = true);
          };
          function f() {
            var e2, t3 = false;
            return N.startDate ? t3 = W.strToDate(N.startDate) : (t3 = N.value || (O && O.val && O.val() ? O.val() : "")) ? (t3 = W.strToDateTime(t3), N.yearOffset && (t3 = new Date(t3.getFullYear() - N.yearOffset, t3.getMonth(), t3.getDate(), t3.getHours(), t3.getMinutes(), t3.getSeconds(), t3.getMilliseconds()))) : N.defaultDate && (t3 = W.strToDateTime(N.defaultDate), N.defaultTime && (e2 = W.strtotime(N.defaultTime), t3.setHours(e2.getHours()), t3.setMinutes(e2.getMinutes()))), t3 && W.isValidDate(t3) ? _.data("changed", true) : t3 = "", t3 || 0;
          }
          function c(m2) {
            var h2 = function(e2, t3) {
              var a4 = e2.replace(/([\[\]\/\{\}\(\)\-\.\+]{1})/g, "\\$1").replace(/_/g, "{digit+}").replace(/([0-9]{1})/g, "{digit$1}").replace(/\{digit([0-9]{1})\}/g, "[0-$1_]{1}").replace(/\{digit[\+]\}/g, "[0-9_]{1}");
              return new RegExp(a4).test(t3);
            }, g2 = function(e2, t3) {
              if (!(e2 = "string" == typeof e2 || e2 instanceof String ? m2.ownerDocument.getElementById(e2) : e2))
                return false;
              if (e2.createTextRange) {
                var a4 = e2.createTextRange();
                return a4.collapse(true), a4.moveEnd("character", t3), a4.moveStart("character", t3), a4.select(), true;
              }
              return !!e2.setSelectionRange && (e2.setSelectionRange(t3, t3), true);
            };
            m2.mask && O.off("keydown.xdsoft"), true === m2.mask && (E.formatMask ? m2.mask = E.formatMask(m2.format) : m2.mask = m2.format.replace(/Y/g, "9999").replace(/F/g, "9999").replace(/m/g, "19").replace(/d/g, "39").replace(/H/g, "29").replace(/i/g, "59").replace(/s/g, "59")), "string" === L.type(m2.mask) && (h2(m2.mask, O.val()) || (O.val(m2.mask.replace(/[0-9]/g, "_")), g2(O[0], 0)), O.on("paste.xdsoft", function(e2) {
              var t3 = (e2.clipboardData || e2.originalEvent.clipboardData || window.clipboardData).getData("text"), a4 = this.value, n4 = this.selectionStart;
              return a4 = a4.substr(0, n4) + t3 + a4.substr(n4 + t3.length), n4 += t3.length, h2(m2.mask, a4) ? (this.value = a4, g2(this, n4)) : "" === L.trim(a4) ? this.value = m2.mask.replace(/[0-9]/g, "_") : O.trigger("error_input.xdsoft"), e2.preventDefault(), false;
            }), O.on("keydown.xdsoft", function(e2) {
              var t3, a4 = this.value, n4 = e2.which, r4 = this.selectionStart, o4 = this.selectionEnd, i4 = r4 !== o4;
              if (48 <= n4 && n4 <= 57 || 96 <= n4 && n4 <= 105 || 8 === n4 || 46 === n4) {
                for (t3 = 8 === n4 || 46 === n4 ? "_" : String.fromCharCode(96 <= n4 && n4 <= 105 ? n4 - 48 : n4), 8 === n4 && r4 && !i4 && (r4 -= 1); ; ) {
                  var s3 = m2.mask.substr(r4, 1), d2 = r4 < m2.mask.length, u2 = 0 < r4;
                  if (!(/[^0-9_]/.test(s3) && d2 && u2))
                    break;
                  r4 += 8 !== n4 || i4 ? 1 : -1;
                }
                if (e2.metaKey && (i4 = !(r4 = 0)), i4) {
                  var l2 = o4 - r4, f2 = m2.mask.replace(/[0-9]/g, "_"), c2 = f2.substr(r4, l2).substr(1);
                  a4 = a4.substr(0, r4) + (t3 + c2) + a4.substr(r4 + l2);
                } else {
                  a4 = a4.substr(0, r4) + t3 + a4.substr(r4 + 1);
                }
                if ("" === L.trim(a4))
                  a4 = f2;
                else if (r4 === m2.mask.length)
                  return e2.preventDefault(), false;
                for (r4 += 8 === n4 ? 0 : 1; /[^0-9_]/.test(m2.mask.substr(r4, 1)) && r4 < m2.mask.length && 0 < r4; )
                  r4 += 8 === n4 ? 0 : 1;
                h2(m2.mask, a4) ? (this.value = a4, g2(this, r4)) : "" === L.trim(a4) ? this.value = m2.mask.replace(/[0-9]/g, "_") : O.trigger("error_input.xdsoft");
              } else if (-1 !== [M, w, j, J, z].indexOf(n4) && I || -1 !== [y, b, x, v, k, S, p, T, D].indexOf(n4))
                return true;
              return e2.preventDefault(), false;
            }));
          }
          F.find(".xdsoft_select").xdsoftScroller(N).on("touchstart mousedown.xdsoft", function(e2) {
            var t3 = e2.originalEvent;
            this.touchMoved = false, this.touchStartPosition = t3.touches ? t3.touches[0] : t3, e2.stopPropagation(), e2.preventDefault();
          }).on("touchmove", ".xdsoft_option", l).on("touchend mousedown.xdsoft", ".xdsoft_option", function() {
            if (!this.touchMoved) {
              void 0 !== W.currentTime && null !== W.currentTime || (W.currentTime = W.now());
              var e2 = W.currentTime.getFullYear();
              W && W.currentTime && W.currentTime[L(this).parent().parent().hasClass("xdsoft_monthselect") ? "setMonth" : "setFullYear"](L(this).data("value")), L(this).parent().parent().hide(), _.trigger("xchange.xdsoft"), N.onChangeMonth && L.isFunction(N.onChangeMonth) && N.onChangeMonth.call(_, W.currentTime, _.data("input")), e2 !== W.currentTime.getFullYear() && L.isFunction(N.onChangeYear) && N.onChangeYear.call(_, W.currentTime, _.data("input"));
            }
          }), _.getValue = function() {
            return W.getCurrentTime();
          }, _.setOptions = function(e2) {
            var l2 = {};
            N = L.extend(true, {}, N, e2), e2.allowTimes && L.isArray(e2.allowTimes) && e2.allowTimes.length && (N.allowTimes = L.extend(true, [], e2.allowTimes)), e2.weekends && L.isArray(e2.weekends) && e2.weekends.length && (N.weekends = L.extend(true, [], e2.weekends)), e2.allowDates && L.isArray(e2.allowDates) && e2.allowDates.length && (N.allowDates = L.extend(true, [], e2.allowDates)), e2.allowDateRe && "[object String]" === Object.prototype.toString.call(e2.allowDateRe) && (N.allowDateRe = new RegExp(e2.allowDateRe)), e2.highlightedDates && L.isArray(e2.highlightedDates) && e2.highlightedDates.length && (L.each(e2.highlightedDates, function(e3, t3) {
              var a4, n4 = L.map(t3.split(","), L.trim), r4 = new m(E.parseDate(n4[0], N.formatDate), n4[1], n4[2]), o4 = E.formatDate(r4.date, N.formatDate);
              void 0 !== l2[o4] ? (a4 = l2[o4].desc) && a4.length && r4.desc && r4.desc.length && (l2[o4].desc = a4 + "\n" + r4.desc) : l2[o4] = r4;
            }), N.highlightedDates = L.extend(true, [], l2)), e2.highlightedPeriods && L.isArray(e2.highlightedPeriods) && e2.highlightedPeriods.length && (l2 = L.extend(true, [], N.highlightedDates), L.each(e2.highlightedPeriods, function(e3, t3) {
              var a4, n4, r4, o4, i4, s3, d2;
              if (L.isArray(t3))
                a4 = t3[0], n4 = t3[1], r4 = t3[2], d2 = t3[3];
              else {
                var u2 = L.map(t3.split(","), L.trim);
                a4 = E.parseDate(u2[0], N.formatDate), n4 = E.parseDate(u2[1], N.formatDate), r4 = u2[2], d2 = u2[3];
              }
              for (; a4 <= n4; )
                o4 = new m(a4, r4, d2), i4 = E.formatDate(a4, N.formatDate), a4.setDate(a4.getDate() + 1), void 0 !== l2[i4] ? (s3 = l2[i4].desc) && s3.length && o4.desc && o4.desc.length && (l2[i4].desc = s3 + "\n" + o4.desc) : l2[i4] = o4;
            }), N.highlightedDates = L.extend(true, [], l2)), e2.disabledDates && L.isArray(e2.disabledDates) && e2.disabledDates.length && (N.disabledDates = L.extend(true, [], e2.disabledDates)), e2.disabledWeekDays && L.isArray(e2.disabledWeekDays) && e2.disabledWeekDays.length && (N.disabledWeekDays = L.extend(true, [], e2.disabledWeekDays)), !N.open && !N.opened || N.inline || O.trigger("open.xdsoft"), N.inline && (s2 = true, _.addClass("xdsoft_inline"), O.after(_).hide()), N.inverseButton && (N.next = "xdsoft_prev", N.prev = "xdsoft_next"), N.datepicker ? g.addClass("active") : g.removeClass("active"), N.timepicker ? o3.addClass("active") : o3.removeClass("active"), N.value && (W.setCurrentTime(N.value), O && O.val && O.val(W.str)), isNaN(N.dayOfWeekStart) ? N.dayOfWeekStart = 0 : N.dayOfWeekStart = parseInt(N.dayOfWeekStart, 10) % 7, N.timepickerScrollbar || u.xdsoftScroller(N, "hide"), N.minDate && /^[\+\-](.*)$/.test(N.minDate) && (N.minDate = E.formatDate(W.strToDateTime(N.minDate), N.formatDate)), N.maxDate && /^[\+\-](.*)$/.test(N.maxDate) && (N.maxDate = E.formatDate(W.strToDateTime(N.maxDate), N.formatDate)), N.minDateTime && /^\+(.*)$/.test(N.minDateTime) && (N.minDateTime = W.strToDateTime(N.minDateTime).dateFormat(N.formatDate)), N.maxDateTime && /^\+(.*)$/.test(N.maxDateTime) && (N.maxDateTime = W.strToDateTime(N.maxDateTime).dateFormat(N.formatDate)), i3.toggle(N.showApplyButton), F.find(".xdsoft_today_button").css("visibility", N.todayButton ? "visible" : "hidden"), F.find("." + N.prev).css("visibility", N.prevButton ? "visible" : "hidden"), F.find("." + N.next).css("visibility", N.nextButton ? "visible" : "hidden"), c(N), N.validateOnBlur && O.off("blur.xdsoft").on("blur.xdsoft", function() {
              if (N.allowBlank && (!L.trim(L(this).val()).length || "string" == typeof N.mask && L.trim(L(this).val()) === N.mask.replace(/[0-9]/g, "_")))
                L(this).val(null), _.data("xdsoft_datetime").empty();
              else {
                var e3 = E.parseDate(L(this).val(), N.format);
                if (e3)
                  L(this).val(E.formatDate(e3, N.format));
                else {
                  var t3 = +[L(this).val()[0], L(this).val()[1]].join(""), a4 = +[L(this).val()[2], L(this).val()[3]].join("");
                  !N.datepicker && N.timepicker && 0 <= t3 && t3 < 24 && 0 <= a4 && a4 < 60 ? L(this).val([t3, a4].map(function(e4) {
                    return 9 < e4 ? e4 : "0" + e4;
                  }).join(":")) : L(this).val(E.formatDate(W.now(), N.format));
                }
                _.data("xdsoft_datetime").setCurrentTime(L(this).val());
              }
              _.trigger("changedatetime.xdsoft"), _.trigger("close.xdsoft");
            }), N.dayOfWeekStartPrev = 0 === N.dayOfWeekStart ? 6 : N.dayOfWeekStart - 1, _.trigger("xchange.xdsoft").trigger("afterOpen.xdsoft");
          }, _.data("options", N).on("touchstart mousedown.xdsoft", function(e2) {
            return e2.stopPropagation(), e2.preventDefault(), A.hide(), Y.hide(), false;
          }), u.append(P), u.xdsoftScroller(N), _.on("afterOpen.xdsoft", function() {
            u.xdsoftScroller(N);
          }), _.append(g).append(o3), true !== N.withoutCopyright && _.append(e), g.append(F).append(C).append(i3), N.insideParent ? L(O).parent().append(_) : L(N.parentID).append(_), W = new function() {
            var r4 = this;
            r4.now = function(e2) {
              var t3, a4, n4 = new Date();
              return !e2 && N.defaultDate && (t3 = r4.strToDateTime(N.defaultDate), n4.setFullYear(t3.getFullYear()), n4.setMonth(t3.getMonth()), n4.setDate(t3.getDate())), n4.setFullYear(n4.getFullYear()), !e2 && N.defaultTime && (a4 = r4.strtotime(N.defaultTime), n4.setHours(a4.getHours()), n4.setMinutes(a4.getMinutes()), n4.setSeconds(a4.getSeconds()), n4.setMilliseconds(a4.getMilliseconds())), n4;
            }, r4.isValidDate = function(e2) {
              return "[object Date]" === Object.prototype.toString.call(e2) && !isNaN(e2.getTime());
            }, r4.setCurrentTime = function(e2, t3) {
              "string" == typeof e2 ? r4.currentTime = r4.strToDateTime(e2) : r4.isValidDate(e2) ? r4.currentTime = e2 : e2 || t3 || !N.allowBlank || N.inline ? r4.currentTime = r4.now() : r4.currentTime = null, _.trigger("xchange.xdsoft");
            }, r4.empty = function() {
              r4.currentTime = null;
            }, r4.getCurrentTime = function() {
              return r4.currentTime;
            }, r4.nextMonth = function() {
              void 0 !== r4.currentTime && null !== r4.currentTime || (r4.currentTime = r4.now());
              var e2, t3 = r4.currentTime.getMonth() + 1;
              return 12 === t3 && (r4.currentTime.setFullYear(r4.currentTime.getFullYear() + 1), t3 = 0), e2 = r4.currentTime.getFullYear(), r4.currentTime.setDate(Math.min(new Date(r4.currentTime.getFullYear(), t3 + 1, 0).getDate(), r4.currentTime.getDate())), r4.currentTime.setMonth(t3), N.onChangeMonth && L.isFunction(N.onChangeMonth) && N.onChangeMonth.call(_, W.currentTime, _.data("input")), e2 !== r4.currentTime.getFullYear() && L.isFunction(N.onChangeYear) && N.onChangeYear.call(_, W.currentTime, _.data("input")), _.trigger("xchange.xdsoft"), t3;
            }, r4.prevMonth = function() {
              void 0 !== r4.currentTime && null !== r4.currentTime || (r4.currentTime = r4.now());
              var e2 = r4.currentTime.getMonth() - 1;
              return -1 === e2 && (r4.currentTime.setFullYear(r4.currentTime.getFullYear() - 1), e2 = 11), r4.currentTime.setDate(Math.min(new Date(r4.currentTime.getFullYear(), e2 + 1, 0).getDate(), r4.currentTime.getDate())), r4.currentTime.setMonth(e2), N.onChangeMonth && L.isFunction(N.onChangeMonth) && N.onChangeMonth.call(_, W.currentTime, _.data("input")), _.trigger("xchange.xdsoft"), e2;
            }, r4.getWeekOfYear = function(e2) {
              if (N.onGetWeekOfYear && L.isFunction(N.onGetWeekOfYear)) {
                var t3 = N.onGetWeekOfYear.call(_, e2);
                if (void 0 !== t3)
                  return t3;
              }
              var a4 = new Date(e2.getFullYear(), 0, 1);
              return 4 !== a4.getDay() && a4.setMonth(0, 1 + (4 - a4.getDay() + 7) % 7), Math.ceil(((e2 - a4) / 864e5 + a4.getDay() + 1) / 7);
            }, r4.strToDateTime = function(e2) {
              var t3, a4, n4 = [];
              return e2 && e2 instanceof Date && r4.isValidDate(e2) ? e2 : ((n4 = /^([+-]{1})(.*)$/.exec(e2)) && (n4[2] = E.parseDate(n4[2], N.formatDate)), a4 = n4 && n4[2] ? (t3 = n4[2].getTime() - 6e4 * n4[2].getTimezoneOffset(), new Date(r4.now(true).getTime() + parseInt(n4[1] + "1", 10) * t3)) : e2 ? E.parseDate(e2, N.format) : r4.now(), r4.isValidDate(a4) || (a4 = r4.now()), a4);
            }, r4.strToDate = function(e2) {
              if (e2 && e2 instanceof Date && r4.isValidDate(e2))
                return e2;
              var t3 = e2 ? E.parseDate(e2, N.formatDate) : r4.now(true);
              return r4.isValidDate(t3) || (t3 = r4.now(true)), t3;
            }, r4.strtotime = function(e2) {
              if (e2 && e2 instanceof Date && r4.isValidDate(e2))
                return e2;
              var t3 = e2 ? E.parseDate(e2, N.formatTime) : r4.now(true);
              return r4.isValidDate(t3) || (t3 = r4.now(true)), t3;
            }, r4.str = function() {
              var e2 = N.format;
              return N.yearOffset && (e2 = (e2 = e2.replace("Y", r4.currentTime.getFullYear() + N.yearOffset)).replace("y", String(r4.currentTime.getFullYear() + N.yearOffset).substring(2, 4))), E.formatDate(r4.currentTime, e2);
            }, r4.currentTime = this.now();
          }(), i3.on("touchend click", function(e2) {
            e2.preventDefault(), _.data("changed", true), W.setCurrentTime(f()), O.val(W.str()), _.trigger("close.xdsoft");
          }), F.find(".xdsoft_today_button").on("touchend mousedown.xdsoft", function() {
            _.data("changed", true), W.setCurrentTime(0, true), _.trigger("afterOpen.xdsoft");
          }).on("dblclick.xdsoft", function() {
            var e2, t3, a4 = W.getCurrentTime();
            a4 = new Date(a4.getFullYear(), a4.getMonth(), a4.getDate()), e2 = W.strToDate(N.minDate), a4 < (e2 = new Date(e2.getFullYear(), e2.getMonth(), e2.getDate())) || (t3 = W.strToDate(N.maxDate), (t3 = new Date(t3.getFullYear(), t3.getMonth(), t3.getDate())) < a4 || (O.val(W.str()), O.trigger("change"), _.trigger("close.xdsoft")));
          }), F.find(".xdsoft_prev,.xdsoft_next").on("touchend mousedown.xdsoft", function() {
            var a4 = L(this), n4 = 0, r4 = false;
            !function e2(t3) {
              a4.hasClass(N.next) ? W.nextMonth() : a4.hasClass(N.prev) && W.prevMonth(), N.monthChangeSpinner && (r4 || (n4 = setTimeout(e2, t3 || 100)));
            }(500), L([N.ownerDocument.body, N.contentWindow]).on("touchend mouseup.xdsoft", function e2() {
              clearTimeout(n4), r4 = true, L([N.ownerDocument.body, N.contentWindow]).off("touchend mouseup.xdsoft", e2);
            });
          }), o3.find(".xdsoft_prev,.xdsoft_next").on("touchend mousedown.xdsoft", function() {
            var o4 = L(this), i4 = 0, s3 = false, d2 = 110;
            !function e2(t3) {
              var a4 = u[0].clientHeight, n4 = P[0].offsetHeight, r4 = Math.abs(parseInt(P.css("marginTop"), 10));
              o4.hasClass(N.next) && n4 - a4 - N.timeHeightInTimePicker >= r4 ? P.css("marginTop", "-" + (r4 + N.timeHeightInTimePicker) + "px") : o4.hasClass(N.prev) && 0 <= r4 - N.timeHeightInTimePicker && P.css("marginTop", "-" + (r4 - N.timeHeightInTimePicker) + "px"), u.trigger("scroll_element.xdsoft_scroller", [Math.abs(parseInt(P[0].style.marginTop, 10) / (n4 - a4))]), d2 = 10 < d2 ? 10 : d2 - 10, s3 || (i4 = setTimeout(e2, t3 || d2));
            }(500), L([N.ownerDocument.body, N.contentWindow]).on("touchend mouseup.xdsoft", function e2() {
              clearTimeout(i4), s3 = true, L([N.ownerDocument.body, N.contentWindow]).off("touchend mouseup.xdsoft", e2);
            });
          }), t2 = 0, _.on("xchange.xdsoft", function(e2) {
            clearTimeout(t2), t2 = setTimeout(function() {
              void 0 !== W.currentTime && null !== W.currentTime || (W.currentTime = W.now());
              for (var e3, t3, a4, n4, r4, o4, i4, s3, d2, u2, l2 = "", f2 = new Date(W.currentTime.getFullYear(), W.currentTime.getMonth(), 1, 12, 0, 0), c2 = 0, m2 = W.now(), h2 = false, g2 = false, p2 = false, D2 = false, y2 = [], v2 = true, b2 = ""; f2.getDay() !== N.dayOfWeekStart; )
                f2.setDate(f2.getDate() - 1);
              for (l2 += "<table><thead><tr>", N.weeks && (l2 += "<th></th>"), e3 = 0; e3 < 7; e3 += 1)
                l2 += "<th>" + N.i18n[R].dayOfWeekShort[(e3 + N.dayOfWeekStart) % 7] + "</th>";
              for (l2 += "</tr></thead>", l2 += "<tbody>", false !== N.maxDate && (h2 = W.strToDate(N.maxDate), h2 = new Date(h2.getFullYear(), h2.getMonth(), h2.getDate(), 23, 59, 59, 999)), false !== N.minDate && (g2 = W.strToDate(N.minDate), g2 = new Date(g2.getFullYear(), g2.getMonth(), g2.getDate())), false !== N.minDateTime && (p2 = W.strToDate(N.minDateTime), p2 = new Date(p2.getFullYear(), p2.getMonth(), p2.getDate(), p2.getHours(), p2.getMinutes(), p2.getSeconds())), false !== N.maxDateTime && (D2 = W.strToDate(N.maxDateTime), D2 = new Date(D2.getFullYear(), D2.getMonth(), D2.getDate(), D2.getHours(), D2.getMinutes(), D2.getSeconds())), false !== D2 && (u2 = 31 * (12 * D2.getFullYear() + D2.getMonth()) + D2.getDate()); c2 < W.currentTime.countDaysInMonth() || f2.getDay() !== N.dayOfWeekStart || W.currentTime.getMonth() === f2.getMonth(); ) {
                y2 = [], c2 += 1, a4 = f2.getDay(), n4 = f2.getDate(), r4 = f2.getFullYear(), M2 = f2.getMonth(), o4 = W.getWeekOfYear(f2), d2 = "", y2.push("xdsoft_date"), i4 = N.beforeShowDay && L.isFunction(N.beforeShowDay.call) ? N.beforeShowDay.call(_, f2) : null, N.allowDateRe && "[object RegExp]" === Object.prototype.toString.call(N.allowDateRe) && (N.allowDateRe.test(E.formatDate(f2, N.formatDate)) || y2.push("xdsoft_disabled")), N.allowDates && 0 < N.allowDates.length && -1 === N.allowDates.indexOf(E.formatDate(f2, N.formatDate)) && y2.push("xdsoft_disabled");
                var k2 = 31 * (12 * f2.getFullYear() + f2.getMonth()) + f2.getDate();
                (false !== h2 && h2 < f2 || false !== p2 && f2 < p2 || false !== g2 && f2 < g2 || false !== D2 && u2 < k2 || i4 && false === i4[0]) && y2.push("xdsoft_disabled"), -1 !== N.disabledDates.indexOf(E.formatDate(f2, N.formatDate)) && y2.push("xdsoft_disabled"), -1 !== N.disabledWeekDays.indexOf(a4) && y2.push("xdsoft_disabled"), O.is("[disabled]") && y2.push("xdsoft_disabled"), i4 && "" !== i4[1] && y2.push(i4[1]), W.currentTime.getMonth() !== M2 && y2.push("xdsoft_other_month"), (N.defaultSelect || _.data("changed")) && E.formatDate(W.currentTime, N.formatDate) === E.formatDate(f2, N.formatDate) && y2.push("xdsoft_current"), E.formatDate(m2, N.formatDate) === E.formatDate(f2, N.formatDate) && y2.push("xdsoft_today"), 0 !== f2.getDay() && 6 !== f2.getDay() && -1 === N.weekends.indexOf(E.formatDate(f2, N.formatDate)) || y2.push("xdsoft_weekend"), void 0 !== N.highlightedDates[E.formatDate(f2, N.formatDate)] && (t3 = N.highlightedDates[E.formatDate(f2, N.formatDate)], y2.push(void 0 === t3.style ? "xdsoft_highlighted_default" : t3.style), d2 = void 0 === t3.desc ? "" : t3.desc), N.beforeShowDay && L.isFunction(N.beforeShowDay) && y2.push(N.beforeShowDay(f2)), v2 && (l2 += "<tr>", v2 = false, N.weeks && (l2 += "<th>" + o4 + "</th>")), l2 += '<td data-date="' + n4 + '" data-month="' + M2 + '" data-year="' + r4 + '" class="xdsoft_date xdsoft_day_of_week' + f2.getDay() + " " + y2.join(" ") + '" title="' + d2 + '"><div>' + n4 + "</div></td>", f2.getDay() === N.dayOfWeekStartPrev && (l2 += "</tr>", v2 = true), f2.setDate(n4 + 1);
              }
              l2 += "</tbody></table>", C.html(l2), F.find(".xdsoft_label span").eq(0).text(N.i18n[R].months[W.currentTime.getMonth()]), F.find(".xdsoft_label span").eq(1).text(W.currentTime.getFullYear() + N.yearOffset), M2 = b2 = "";
              var x2 = 0;
              if (false !== N.minTime) {
                var T2 = W.strtotime(N.minTime);
                x2 = 60 * T2.getHours() + T2.getMinutes();
              }
              var S2 = 1440;
              if (false !== N.maxTime) {
                T2 = W.strtotime(N.maxTime);
                S2 = 60 * T2.getHours() + T2.getMinutes();
              }
              if (false !== N.minDateTime) {
                T2 = W.strToDateTime(N.minDateTime);
                if (E.formatDate(W.currentTime, N.formatDate) === E.formatDate(T2, N.formatDate)) {
                  var M2 = 60 * T2.getHours() + T2.getMinutes();
                  x2 < M2 && (x2 = M2);
                }
              }
              if (false !== N.maxDateTime) {
                T2 = W.strToDateTime(N.maxDateTime);
                if (E.formatDate(W.currentTime, N.formatDate) === E.formatDate(T2, N.formatDate))
                  (M2 = 60 * T2.getHours() + T2.getMinutes()) < S2 && (S2 = M2);
              }
              if (s3 = function(e4, t4) {
                var a5, n5 = W.now(), r5 = N.allowTimes && L.isArray(N.allowTimes) && N.allowTimes.length;
                n5.setHours(e4), e4 = parseInt(n5.getHours(), 10), n5.setMinutes(t4), t4 = parseInt(n5.getMinutes(), 10), y2 = [];
                var o5 = 60 * e4 + t4;
                (O.is("[disabled]") || S2 <= o5 || o5 < x2) && y2.push("xdsoft_disabled"), (a5 = new Date(W.currentTime)).setHours(parseInt(W.currentTime.getHours(), 10)), r5 || a5.setMinutes(Math[N.roundTime](W.currentTime.getMinutes() / N.step) * N.step), (N.initTime || N.defaultSelect || _.data("changed")) && a5.getHours() === parseInt(e4, 10) && (!r5 && 59 < N.step || a5.getMinutes() === parseInt(t4, 10)) && (N.defaultSelect || _.data("changed") ? y2.push("xdsoft_current") : N.initTime && y2.push("xdsoft_init_time")), parseInt(m2.getHours(), 10) === parseInt(e4, 10) && parseInt(m2.getMinutes(), 10) === parseInt(t4, 10) && y2.push("xdsoft_today"), b2 += '<div class="xdsoft_time ' + y2.join(" ") + '" data-hour="' + e4 + '" data-minute="' + t4 + '">' + E.formatDate(n5, N.formatTime) + "</div>";
              }, N.allowTimes && L.isArray(N.allowTimes) && N.allowTimes.length)
                for (c2 = 0; c2 < N.allowTimes.length; c2 += 1)
                  s3(W.strtotime(N.allowTimes[c2]).getHours(), M2 = W.strtotime(N.allowTimes[c2]).getMinutes());
              else
                for (e3 = c2 = 0; c2 < (N.hours12 ? 12 : 24); c2 += 1)
                  for (e3 = 0; e3 < 60; e3 += N.step) {
                    var w2 = 60 * c2 + e3;
                    w2 < x2 || (S2 <= w2 || s3((c2 < 10 ? "0" : "") + c2, M2 = (e3 < 10 ? "0" : "") + e3));
                  }
              for (P.html(b2), H = "", c2 = parseInt(N.yearStart, 10); c2 <= parseInt(N.yearEnd, 10); c2 += 1)
                H += '<div class="xdsoft_option ' + (W.currentTime.getFullYear() === c2 ? "xdsoft_current" : "") + '" data-value="' + c2 + '">' + (c2 + N.yearOffset) + "</div>";
              for (A.children().eq(0).html(H), c2 = parseInt(N.monthStart, 10), H = ""; c2 <= parseInt(N.monthEnd, 10); c2 += 1)
                H += '<div class="xdsoft_option ' + (W.currentTime.getMonth() === c2 ? "xdsoft_current" : "") + '" data-value="' + c2 + '">' + N.i18n[R].months[c2] + "</div>";
              Y.children().eq(0).html(H), L(_).trigger("generate.xdsoft");
            }, 10), e2.stopPropagation();
          }).on("afterOpen.xdsoft", function() {
            var e2, t3, a4, n4;
            N.timepicker && (P.find(".xdsoft_current").length ? e2 = ".xdsoft_current" : P.find(".xdsoft_init_time").length && (e2 = ".xdsoft_init_time"), e2 ? (t3 = u[0].clientHeight, (a4 = P[0].offsetHeight) - t3 < (n4 = P.find(e2).index() * N.timeHeightInTimePicker + 1) && (n4 = a4 - t3), u.trigger("scroll_element.xdsoft_scroller", [parseInt(n4, 10) / (a4 - t3)])) : u.trigger("scroll_element.xdsoft_scroller", [0]));
          }), n3 = 0, C.on("touchend click.xdsoft", "td", function(e2) {
            e2.stopPropagation(), n3 += 1;
            var t3 = L(this), a4 = W.currentTime;
            if (null == a4 && (W.currentTime = W.now(), a4 = W.currentTime), t3.hasClass("xdsoft_disabled"))
              return false;
            a4.setDate(1), a4.setFullYear(t3.data("year")), a4.setMonth(t3.data("month")), a4.setDate(t3.data("date")), _.trigger("select.xdsoft", [a4]), O.val(W.str()), N.onSelectDate && L.isFunction(N.onSelectDate) && N.onSelectDate.call(_, W.currentTime, _.data("input"), e2), _.data("changed", true), _.trigger("xchange.xdsoft"), _.trigger("changedatetime.xdsoft"), (1 < n3 || true === N.closeOnDateSelect || false === N.closeOnDateSelect && !N.timepicker) && !N.inline && _.trigger("close.xdsoft"), setTimeout(function() {
              n3 = 0;
            }, 200);
          }), P.on("touchstart", "div", function(e2) {
            this.touchMoved = false;
          }).on("touchmove", "div", l).on("touchend click.xdsoft", "div", function(e2) {
            if (!this.touchMoved) {
              e2.stopPropagation();
              var t3 = L(this), a4 = W.currentTime;
              if (null == a4 && (W.currentTime = W.now(), a4 = W.currentTime), t3.hasClass("xdsoft_disabled"))
                return false;
              a4.setHours(t3.data("hour")), a4.setMinutes(t3.data("minute")), _.trigger("select.xdsoft", [a4]), _.data("input").val(W.str()), N.onSelectTime && L.isFunction(N.onSelectTime) && N.onSelectTime.call(_, W.currentTime, _.data("input"), e2), _.data("changed", true), _.trigger("xchange.xdsoft"), _.trigger("changedatetime.xdsoft"), true !== N.inline && true === N.closeOnTimeSelect && _.trigger("close.xdsoft");
            }
          }), g.on("mousewheel.xdsoft", function(e2) {
            return !N.scrollMonth || (e2.deltaY < 0 ? W.nextMonth() : W.prevMonth(), false);
          }), O.on("mousewheel.xdsoft", function(e2) {
            return !N.scrollInput || (!N.datepicker && N.timepicker ? (0 <= (a3 = P.find(".xdsoft_current").length ? P.find(".xdsoft_current").eq(0).index() : 0) + e2.deltaY && a3 + e2.deltaY < P.children().length && (a3 += e2.deltaY), P.children().eq(a3).length && P.children().eq(a3).trigger("mousedown"), false) : N.datepicker && !N.timepicker ? (g.trigger(e2, [e2.deltaY, e2.deltaX, e2.deltaY]), O.val && O.val(W.str()), _.trigger("changedatetime.xdsoft"), false) : void 0);
          }), _.on("changedatetime.xdsoft", function(e2) {
            if (N.onChangeDateTime && L.isFunction(N.onChangeDateTime)) {
              var t3 = _.data("input");
              N.onChangeDateTime.call(_, W.currentTime, t3, e2), delete N.value, t3.trigger("change");
            }
          }).on("generate.xdsoft", function() {
            N.onGenerate && L.isFunction(N.onGenerate) && N.onGenerate.call(_, W.currentTime, _.data("input")), s2 && (_.trigger("afterOpen.xdsoft"), s2 = false);
          }).on("click.xdsoft", function(e2) {
            e2.stopPropagation();
          }), a3 = 0, h = function(e2, t3) {
            do {
              if (!(e2 = e2.parentNode) || false === t3(e2))
                break;
            } while ("HTML" !== e2.nodeName);
          }, r3 = function() {
            var e2, t3, a4, n4, r4, o4, i4, s3, d2, u2, l2, f2, c2;
            if (e2 = (s3 = _.data("input")).offset(), t3 = s3[0], u2 = "top", a4 = e2.top + t3.offsetHeight - 1, n4 = e2.left, r4 = "absolute", d2 = L(N.contentWindow).width(), f2 = L(N.contentWindow).height(), c2 = L(N.contentWindow).scrollTop(), N.ownerDocument.documentElement.clientWidth - e2.left < g.parent().outerWidth(true)) {
              var m2 = g.parent().outerWidth(true) - t3.offsetWidth;
              n4 -= m2;
            }
            "rtl" === s3.parent().css("direction") && (n4 -= _.outerWidth() - s3.outerWidth()), N.fixed ? (a4 -= c2, n4 -= L(N.contentWindow).scrollLeft(), r4 = "fixed") : (i4 = false, h(t3, function(e3) {
              return null !== e3 && ("fixed" === N.contentWindow.getComputedStyle(e3).getPropertyValue("position") ? !(i4 = true) : void 0);
            }), i4 && !N.insideParent ? (r4 = "fixed", a4 + _.outerHeight() > f2 + c2 ? (u2 = "bottom", a4 = f2 + c2 - e2.top) : a4 -= c2) : a4 + _[0].offsetHeight > f2 + c2 && (a4 = e2.top - _[0].offsetHeight + 1), a4 < 0 && (a4 = 0), n4 + t3.offsetWidth > d2 && (n4 = d2 - t3.offsetWidth)), o4 = _[0], h(o4, function(e3) {
              if ("relative" === N.contentWindow.getComputedStyle(e3).getPropertyValue("position") && d2 >= e3.offsetWidth)
                return n4 -= (d2 - e3.offsetWidth) / 2, false;
            }), l2 = { position: r4, left: N.insideParent ? t3.offsetLeft : n4, top: "", bottom: "" }, N.insideParent ? l2[u2] = t3.offsetTop + t3.offsetHeight : l2[u2] = a4, _.css(l2);
          }, _.on("open.xdsoft", function(e2) {
            var t3 = true;
            N.onShow && L.isFunction(N.onShow) && (t3 = N.onShow.call(_, W.currentTime, _.data("input"), e2)), false !== t3 && (_.show(), r3(), L(N.contentWindow).off("resize.xdsoft", r3).on("resize.xdsoft", r3), N.closeOnWithoutClick && L([N.ownerDocument.body, N.contentWindow]).on("touchstart mousedown.xdsoft", function e3() {
              _.trigger("close.xdsoft"), L([N.ownerDocument.body, N.contentWindow]).off("touchstart mousedown.xdsoft", e3);
            }));
          }).on("close.xdsoft", function(e2) {
            var t3 = true;
            F.find(".xdsoft_month,.xdsoft_year").find(".xdsoft_select").hide(), N.onClose && L.isFunction(N.onClose) && (t3 = N.onClose.call(_, W.currentTime, _.data("input"), e2)), false === t3 || N.opened || N.inline || _.hide(), e2.stopPropagation();
          }).on("toggle.xdsoft", function() {
            _.is(":visible") ? _.trigger("close.xdsoft") : _.trigger("open.xdsoft");
          }).data("input", O), d = 0, _.data("xdsoft_datetime", W), _.setOptions(N), W.setCurrentTime(f()), O.data("xdsoft_datetimepicker", _).on("open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart", function() {
            O.is(":disabled") || O.data("xdsoft_datetimepicker").is(":visible") && N.closeOnInputClick || N.openOnFocus && (clearTimeout(d), d = setTimeout(function() {
              O.is(":disabled") || (s2 = true, W.setCurrentTime(f(), true), N.mask && c(N), _.trigger("open.xdsoft"));
            }, 100));
          }).on("keydown.xdsoft", function(e2) {
            var t3, a4 = e2.which;
            return -1 !== [D].indexOf(a4) && N.enterLikeTab ? (t3 = L("input:visible,textarea:visible,button:visible,a:visible"), _.trigger("close.xdsoft"), t3.eq(t3.index(this) + 1).focus(), false) : -1 !== [T].indexOf(a4) ? (_.trigger("close.xdsoft"), true) : void 0;
          }).on("blur.xdsoft", function() {
            _.trigger("close.xdsoft");
          });
        }, r2 = function(e) {
          var t2 = e.data("xdsoft_datetimepicker");
          t2 && (t2.data("xdsoft_datetime", null), t2.remove(), e.data("xdsoft_datetimepicker", null).off(".xdsoft"), L(N.contentWindow).off("resize.xdsoft"), L([N.contentWindow, N.ownerDocument.body]).off("mousedown.xdsoft touchstart"), e.unmousewheel && e.unmousewheel());
        }, L(N.ownerDocument).off("keydown.xdsoftctrl keyup.xdsoftctrl").off("keydown.xdsoftcmd keyup.xdsoftcmd").on("keydown.xdsoftctrl", function(e) {
          e.keyCode === p && (I = true);
        }).on("keyup.xdsoftctrl", function(e) {
          e.keyCode === p && (I = false);
        }).on("keydown.xdsoftcmd", function(e) {
          91 === e.keyCode && true;
        }).on("keyup.xdsoftcmd", function(e) {
          91 === e.keyCode && false;
        }), this.each(function() {
          var t2, e = L(this).data("xdsoft_datetimepicker");
          if (e) {
            if ("string" === L.type(H))
              switch (H) {
                case "show":
                  L(this).select().focus(), e.trigger("open.xdsoft");
                  break;
                case "hide":
                  e.trigger("close.xdsoft");
                  break;
                case "toggle":
                  e.trigger("toggle.xdsoft");
                  break;
                case "destroy":
                  r2(L(this));
                  break;
                case "reset":
                  this.value = this.defaultValue, this.value && e.data("xdsoft_datetime").isValidDate(E.parseDate(this.value, N.format)) || e.data("changed", false), e.data("xdsoft_datetime").setCurrentTime(this.value);
                  break;
                case "validate":
                  e.data("input").trigger("blur.xdsoft");
                  break;
                default:
                  e[H] && L.isFunction(e[H]) && (o2 = e[H](a2));
              }
            else
              e.setOptions(H);
            return 0;
          }
          "string" !== L.type(H) && (!N.lazyInit || N.open || N.inline ? n2(L(this)) : (t2 = L(this)).on("open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart", function e2() {
            t2.is(":disabled") || t2.data("xdsoft_datetimepicker") || (clearTimeout(i2), i2 = setTimeout(function() {
              t2.data("xdsoft_datetimepicker") || n2(t2), t2.off("open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart", e2).trigger("open.xdsoft");
            }, 100));
          }));
        }), o2;
      }, L.fn.datetimepicker.defaults = s;
    };
    !function(e) {
      "function" == typeof define && define.amd ? define(["jquery", "jquery-mousewheel"], e) : "object" == typeof exports ? module.exports = e(require_jquery()) : e(jQuery);
    }(datetimepickerFactory), function(e) {
      "function" == typeof define && define.amd ? define(["jquery"], e) : "object" == typeof exports ? module.exports = e : e(jQuery);
    }(function(c) {
      var m, h, e = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"], t = "onwheel" in document || 9 <= document.documentMode ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"], g = Array.prototype.slice;
      if (c.event.fixHooks)
        for (var a = e.length; a; )
          c.event.fixHooks[e[--a]] = c.event.mouseHooks;
      var p = c.event.special.mousewheel = { version: "3.1.12", setup: function() {
        if (this.addEventListener)
          for (var e2 = t.length; e2; )
            this.addEventListener(t[--e2], n, false);
        else
          this.onmousewheel = n;
        c.data(this, "mousewheel-line-height", p.getLineHeight(this)), c.data(this, "mousewheel-page-height", p.getPageHeight(this));
      }, teardown: function() {
        if (this.removeEventListener)
          for (var e2 = t.length; e2; )
            this.removeEventListener(t[--e2], n, false);
        else
          this.onmousewheel = null;
        c.removeData(this, "mousewheel-line-height"), c.removeData(this, "mousewheel-page-height");
      }, getLineHeight: function(e2) {
        var t2 = c(e2), a2 = t2["offsetParent" in c.fn ? "offsetParent" : "parent"]();
        return a2.length || (a2 = c("body")), parseInt(a2.css("fontSize"), 10) || parseInt(t2.css("fontSize"), 10) || 16;
      }, getPageHeight: function(e2) {
        return c(e2).height();
      }, settings: { adjustOldDeltas: true, normalizeOffset: true } };
      function n(e2) {
        var t2, a2 = e2 || window.event, n2 = g.call(arguments, 1), r = 0, o = 0, i = 0, s = 0, d = 0;
        if ((e2 = c.event.fix(a2)).type = "mousewheel", "detail" in a2 && (i = -1 * a2.detail), "wheelDelta" in a2 && (i = a2.wheelDelta), "wheelDeltaY" in a2 && (i = a2.wheelDeltaY), "wheelDeltaX" in a2 && (o = -1 * a2.wheelDeltaX), "axis" in a2 && a2.axis === a2.HORIZONTAL_AXIS && (o = -1 * i, i = 0), r = 0 === i ? o : i, "deltaY" in a2 && (r = i = -1 * a2.deltaY), "deltaX" in a2 && (o = a2.deltaX, 0 === i && (r = -1 * o)), 0 !== i || 0 !== o) {
          if (1 === a2.deltaMode) {
            var u = c.data(this, "mousewheel-line-height");
            r *= u, i *= u, o *= u;
          } else if (2 === a2.deltaMode) {
            var l = c.data(this, "mousewheel-page-height");
            r *= l, i *= l, o *= l;
          }
          if (t2 = Math.max(Math.abs(i), Math.abs(o)), (!h || t2 < h) && y(a2, h = t2) && (h /= 40), y(a2, t2) && (r /= 40, o /= 40, i /= 40), r = Math[1 <= r ? "floor" : "ceil"](r / h), o = Math[1 <= o ? "floor" : "ceil"](o / h), i = Math[1 <= i ? "floor" : "ceil"](i / h), p.settings.normalizeOffset && this.getBoundingClientRect) {
            var f = this.getBoundingClientRect();
            s = e2.clientX - f.left, d = e2.clientY - f.top;
          }
          return e2.deltaX = o, e2.deltaY = i, e2.deltaFactor = h, e2.offsetX = s, e2.offsetY = d, e2.deltaMode = 0, n2.unshift(e2, r, o, i), m && clearTimeout(m), m = setTimeout(D, 200), (c.event.dispatch || c.event.handle).apply(this, n2);
        }
      }
      function D() {
        h = null;
      }
      function y(e2, t2) {
        return p.settings.adjustOldDeltas && "mousewheel" === e2.type && t2 % 120 == 0;
      }
      c.fn.extend({ mousewheel: function(e2) {
        return e2 ? this.bind("mousewheel", e2) : this.trigger("mousewheel");
      }, unmousewheel: function(e2) {
        return this.unbind("mousewheel", e2);
      } });
    });
  }
});

export {
  require_jquery_datetimepicker_full_min
};
//# sourceMappingURL=chunk-SMJRRK63.js.map
